<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="mode_8h" kind="file" language="C++">
    <compoundname>mode.h</compoundname>
    <includedby refid="IndexBinaryFlat_8h" local="no">faiss/IndexBinaryFlat.h</includedby>
    <includedby refid="ResidualQuantizer_8h" local="no">faiss/impl/ResidualQuantizer.h</includedby>
    <includedby refid="residual__quantizer__encode__steps_8h" local="no">faiss/impl/residual_quantizer_encode_steps.h</includedby>
    <includedby refid="approx__topk_8h" local="no">faiss/utils/approx_topk/approx_topk.h</includedby>
    <includedby refid="hamming_8h" local="no">faiss/utils/hamming.h</includedby>
    <invincdepgraph>
      <node id="7">
        <label>faiss/IndexAdditiveQuantizer.h</label>
        <link refid="IndexAdditiveQuantizer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>faiss/IndexAdditiveQuantizerFastScan.h</label>
        <link refid="IndexAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="2">
        <label>faiss/IndexBinaryFlat.h</label>
        <link refid="IndexBinaryFlat_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>faiss/IndexBinaryHNSW.h</label>
        <link refid="IndexBinaryHNSW_8h_source"/>
      </node>
      <node id="4">
        <label>faiss/IndexBinaryHash.h</label>
        <link refid="IndexBinaryHash_8h_source"/>
      </node>
      <node id="9">
        <label>faiss/IndexIVFAdditiveQuantizer.h</label>
        <link refid="IndexIVFAdditiveQuantizer_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>faiss/IndexIVFAdditiveQuantizerFastScan.h</label>
        <link refid="IndexIVFAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="5">
        <label>faiss/gpu/GpuIndexBinaryFlat.h</label>
        <link refid="GpuIndexBinaryFlat_8h_source"/>
      </node>
      <node id="11">
        <label>faiss/impl/ProductAdditiveQuantizer.h</label>
        <link refid="ProductAdditiveQuantizer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>faiss/impl/ResidualQuantizer.h</label>
        <link refid="ResidualQuantizer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>faiss/impl/residual_quantizer_encode_steps.h</label>
        <link refid="residual__quantizer__encode__steps_8h_source"/>
      </node>
      <node id="13">
        <label>faiss/utils/approx_topk/approx_topk.h</label>
        <link refid="approx__topk_8h_source"/>
      </node>
      <node id="1">
        <label>faiss/utils/approx_topk/mode.h</label>
        <link refid="mode_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>faiss/utils/hamming.h</label>
        <link refid="hamming_8h_source"/>
      </node>
    </invincdepgraph>
    <sectiondef kind="enum">
      <memberdef kind="enum" id="mode_8h_1a58cd97df40a8121322e0648c49186299" prot="public" static="no" strong="no">
        <type>int</type>
        <name>ApproxTopK_mode_t</name>
        <enumvalue id="mode_8h_1a58cd97df40a8121322e0648c49186299ac1204d260d27c2d08e206bedfd18c326" prot="public">
          <name>EXACT_TOPK</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mode_8h_1a58cd97df40a8121322e0648c49186299a0044fefa2661f72191a2a3222402eb36" prot="public">
          <name>APPROX_TOPK_BUCKETS_B32_D2</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mode_8h_1a58cd97df40a8121322e0648c49186299a06e74269369ad512432041ca91927cb1" prot="public">
          <name>APPROX_TOPK_BUCKETS_B8_D3</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mode_8h_1a58cd97df40a8121322e0648c49186299a9d89b4d741aeb17b0cd8489d78fc9dc8" prot="public">
          <name>APPROX_TOPK_BUCKETS_B16_D2</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="mode_8h_1a58cd97df40a8121322e0648c49186299a41c71c1de89c506f29fd5c2bd1d89b4d" prot="public">
          <name>APPROX_TOPK_BUCKETS_B8_D2</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Represents the mode of use of approximate top-k computations that allows to trade accuracy vs speed. So, every options besides EXACT_TOPK increases the speed.</para>
<para>B represents the number of buckets. D is the number of min-k elements to track within every bucket.</para>
<para>Default option is EXACT_TOPK. APPROX_TOPK_BUCKETS_B16_D2 is worth starting from, if you&apos;d like to experiment a bit.</para>
<para>It seems that only the limited number of combinations are meaningful, because of the limited supply of SIMD registers. Also, certain combinations, such as B32_D1 and B16_D1, were concluded to be not very precise in benchmarks, so ones were not introduced.</para>
<para>TODO: Consider d-ary SIMD heap. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/approx_topk/mode.h" line="28" column="1" bodyfile="faiss/utils/approx_topk/mode.h" bodystart="28" bodyend="34"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Meta<sp/>Platforms,<sp/>Inc.<sp/>and<sp/>affiliates.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment">///<sp/>Represents<sp/>the<sp/>mode<sp/>of<sp/>use<sp/>of<sp/>approximate<sp/>top-k<sp/>computations</highlight></codeline>
<codeline lineno="11"><highlight class="comment">///<sp/>that<sp/>allows<sp/>to<sp/>trade<sp/>accuracy<sp/>vs<sp/>speed.<sp/>So,<sp/>every<sp/>options</highlight></codeline>
<codeline lineno="12"><highlight class="comment">///<sp/>besides<sp/>EXACT_TOPK<sp/>increases<sp/>the<sp/>speed.</highlight></codeline>
<codeline lineno="13"><highlight class="comment">///</highlight></codeline>
<codeline lineno="14"><highlight class="comment">///<sp/>B<sp/>represents<sp/>the<sp/>number<sp/>of<sp/>buckets.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">///<sp/>D<sp/>is<sp/>the<sp/>number<sp/>of<sp/>min-k<sp/>elements<sp/>to<sp/>track<sp/>within<sp/>every<sp/>bucket.</highlight></codeline>
<codeline lineno="16"><highlight class="comment">///</highlight></codeline>
<codeline lineno="17"><highlight class="comment">///<sp/>Default<sp/>option<sp/>is<sp/>EXACT_TOPK.</highlight></codeline>
<codeline lineno="18"><highlight class="comment">///<sp/>APPROX_TOPK_BUCKETS_B16_D2<sp/>is<sp/>worth<sp/>starting<sp/>from,<sp/>if<sp/>you&apos;d<sp/>like</highlight></codeline>
<codeline lineno="19"><highlight class="comment">///<sp/>to<sp/>experiment<sp/>a<sp/>bit.</highlight></codeline>
<codeline lineno="20"><highlight class="comment">///</highlight></codeline>
<codeline lineno="21"><highlight class="comment">///<sp/>It<sp/>seems<sp/>that<sp/>only<sp/>the<sp/>limited<sp/>number<sp/>of<sp/>combinations<sp/>are</highlight></codeline>
<codeline lineno="22"><highlight class="comment">///<sp/>meaningful,<sp/>because<sp/>of<sp/>the<sp/>limited<sp/>supply<sp/>of<sp/>SIMD<sp/>registers.</highlight></codeline>
<codeline lineno="23"><highlight class="comment">///<sp/>Also,<sp/>certain<sp/>combinations,<sp/>such<sp/>as<sp/>B32_D1<sp/>and<sp/>B16_D1,<sp/>were<sp/>concluded</highlight></codeline>
<codeline lineno="24"><highlight class="comment">///<sp/>to<sp/>be<sp/>not<sp/>very<sp/>precise<sp/>in<sp/>benchmarks,<sp/>so<sp/>ones<sp/>were<sp/>not<sp/>introduced.</highlight></codeline>
<codeline lineno="25"><highlight class="comment">///</highlight></codeline>
<codeline lineno="26"><highlight class="comment">///<sp/>TODO:<sp/>Consider<sp/>d-ary<sp/>SIMD<sp/>heap.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>ApproxTopK_mode_t<sp/>:<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>EXACT_TOPK<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>APPROX_TOPK_BUCKETS_B32_D2<sp/>=<sp/>1,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>APPROX_TOPK_BUCKETS_B8_D3<sp/>=<sp/>2,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>APPROX_TOPK_BUCKETS_B16_D2<sp/>=<sp/>3,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>APPROX_TOPK_BUCKETS_B8_D2<sp/>=<sp/>4,</highlight></codeline>
<codeline lineno="34"><highlight class="normal">};</highlight></codeline>
    </programlisting>
    <location file="faiss/utils/approx_topk/mode.h"/>
  </compounddef>
</doxygen>
