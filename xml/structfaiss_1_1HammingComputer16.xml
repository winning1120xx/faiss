<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1HammingComputer16" kind="struct" language="C++" prot="public">
    <compoundname>faiss::HammingComputer16</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer16_1ac4340a237b6cf38bad084fe520ce4f38" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer16::a0</definition>
        <argsstring></argsstring>
        <name>a0</name>
        <qualifiedname>faiss::HammingComputer16::a0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="131" column="14" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer16_1ae0d55a59a4f9a4023f1888dc43297277" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer16::a1</definition>
        <argsstring></argsstring>
        <name>a1</name>
        <qualifiedname>faiss::HammingComputer16::a1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="131" column="17" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="131" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1ab601ee8d7ca9e50cc882ebb18354a89e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer16::HammingComputer16</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer16</name>
        <qualifiedname>faiss::HammingComputer16::HammingComputer16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="133" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a11aefbd5ff66bd895ac6563410622ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer16::HammingComputer16</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer16</name>
        <qualifiedname>faiss::HammingComputer16::HammingComputer16</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="135" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="135" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a22a66f390eddd54563e1255b1a1c0184" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer16::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer16::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="139" column="10" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="139" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1ab9589c7dfca5ed5993b4b79cebcb3ee0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer16::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer16::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="146" column="16" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="146" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1ab601ee8d7ca9e50cc882ebb18354a89e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer16::HammingComputer16</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer16</name>
        <qualifiedname>faiss::HammingComputer16::HammingComputer16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="138" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="138" bodyend="138"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a11aefbd5ff66bd895ac6563410622ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer16::HammingComputer16</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer16</name>
        <qualifiedname>faiss::HammingComputer16::HammingComputer16</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="140" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a22a66f390eddd54563e1255b1a1c0184" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer16::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer16::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="144" column="10" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1ab9589c7dfca5ed5993b4b79cebcb3ee0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer16::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer16::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="151" column="16" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1ab601ee8d7ca9e50cc882ebb18354a89e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer16::HammingComputer16</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer16</name>
        <qualifiedname>faiss::HammingComputer16::HammingComputer16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="131" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a11aefbd5ff66bd895ac6563410622ae4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer16::HammingComputer16</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer16</name>
        <qualifiedname>faiss::HammingComputer16::HammingComputer16</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="133" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="133" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a22a66f390eddd54563e1255b1a1c0184" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer16::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer16::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="137" column="10" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1ab9589c7dfca5ed5993b4b79cebcb3ee0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer16::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer16::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="144" column="16" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="144" bodyend="147"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a33ece3f5c55052c67c674958d7847127" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer16::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer16::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="151" column="33" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a33ece3f5c55052c67c674958d7847127" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer16::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer16::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="156" column="33" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="156" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer16_1a33ece3f5c55052c67c674958d7847127" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer16::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer16::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="149" column="33" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="149" bodyend="151"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/utils/hamming_distance/avx2-inl.h" line="130" column="1" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="130" bodyend="154"/>
    <listofallmembers>
      <member refid="structfaiss_1_1HammingComputer16_1ac4340a237b6cf38bad084fe520ce4f38" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>a0</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1ae0d55a59a4f9a4023f1888dc43297277" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>a1</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a33ece3f5c55052c67c674958d7847127" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a33ece3f5c55052c67c674958d7847127" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a33ece3f5c55052c67c674958d7847127" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1ab9589c7dfca5ed5993b4b79cebcb3ee0" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1ab9589c7dfca5ed5993b4b79cebcb3ee0" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1ab9589c7dfca5ed5993b4b79cebcb3ee0" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1ab601ee8d7ca9e50cc882ebb18354a89e" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>HammingComputer16</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a11aefbd5ff66bd895ac6563410622ae4" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>HammingComputer16</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1ab601ee8d7ca9e50cc882ebb18354a89e" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>HammingComputer16</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a11aefbd5ff66bd895ac6563410622ae4" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>HammingComputer16</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1ab601ee8d7ca9e50cc882ebb18354a89e" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>HammingComputer16</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a11aefbd5ff66bd895ac6563410622ae4" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>HammingComputer16</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a22a66f390eddd54563e1255b1a1c0184" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a22a66f390eddd54563e1255b1a1c0184" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer16_1a22a66f390eddd54563e1255b1a1c0184" prot="public" virt="non-virtual"><scope>faiss::HammingComputer16</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
