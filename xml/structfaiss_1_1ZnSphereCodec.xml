<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1ZnSphereCodec" kind="struct" language="C++" prot="public">
    <compoundname>faiss::ZnSphereCodec</compoundname>
    <basecompoundref refid="structfaiss_1_1ZnSphereSearch" prot="public" virt="non-virtual">faiss::ZnSphereSearch</basecompoundref>
    <basecompoundref refid="structfaiss_1_1EnumeratedVectors" prot="public" virt="non-virtual">faiss::EnumeratedVectors</basecompoundref>
    <derivedcompoundref refid="structfaiss_1_1ZnSphereCodecAlt" prot="public" virt="non-virtual">faiss::ZnSphereCodecAlt</derivedcompoundref>
    <includes refid="lattice__Zn_8h" local="no">lattice_Zn.h</includes>
    <innerclass refid="structfaiss_1_1ZnSphereCodec_1_1CodeSegment" prot="public">faiss::ZnSphereCodec::CodeSegment</innerclass>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1ZnSphereCodec_1a0381dd77adc1b9b7d3e3a27b71de708e" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structfaiss_1_1ZnSphereCodec_1_1CodeSegment" kindref="compound">CodeSegment</ref> &gt;</type>
        <definition>std::vector&lt;CodeSegment&gt; faiss::ZnSphereCodec::code_segments</definition>
        <argsstring></argsstring>
        <name>code_segments</name>
        <qualifiedname>faiss::ZnSphereCodec::code_segments</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="123" column="17" bodyfile="faiss/impl/lattice_Zn.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ZnSphereCodec_1a507bfb83a50ee559747b64d96fb27028" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::ZnSphereCodec::nv</definition>
        <argsstring></argsstring>
        <name>nv</name>
        <qualifiedname>faiss::ZnSphereCodec::nv</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="124" column="14" bodyfile="faiss/impl/lattice_Zn.h" bodystart="124" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ZnSphereCodec_1a6180455411065a1597575c3c6b817d90" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::ZnSphereCodec::code_size</definition>
        <argsstring></argsstring>
        <name>code_size</name>
        <qualifiedname>faiss::ZnSphereCodec::code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="125" column="12" bodyfile="faiss/impl/lattice_Zn.h" bodystart="125" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ZnSphereSearch_1a33cd49702699f73c9874523100cdfb4b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ZnSphereSearch::dimS</definition>
        <argsstring></argsstring>
        <name>dimS</name>
        <qualifiedname>faiss::ZnSphereSearch::dimS</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="26" column="9" bodyfile="faiss/impl/lattice_Zn.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ZnSphereSearch_1adabda2cbab5856c0195a83133e48486d" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ZnSphereSearch::r2</definition>
        <argsstring></argsstring>
        <name>r2</name>
        <qualifiedname>faiss::ZnSphereSearch::r2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="26" column="14" bodyfile="faiss/impl/lattice_Zn.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ZnSphereSearch_1a4616ccfd6403081036eb0e33dcebe867" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ZnSphereSearch::natom</definition>
        <argsstring></argsstring>
        <name>natom</name>
        <qualifiedname>faiss::ZnSphereSearch::natom</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="27" column="9" bodyfile="faiss/impl/lattice_Zn.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ZnSphereSearch_1a77143a72b6a5048df0fa79b7134740d8" prot="public" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; faiss::ZnSphereSearch::voc</definition>
        <argsstring></argsstring>
        <name>voc</name>
        <qualifiedname>faiss::ZnSphereSearch::voc</qualifiedname>
        <briefdescription>
<para>size dim * ntatom </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="30" column="17" bodyfile="faiss/impl/lattice_Zn.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1EnumeratedVectors_1af35904a18c8ab0a8df9946822588d8a8" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::EnumeratedVectors::dim</definition>
        <argsstring></argsstring>
        <name>dim</name>
        <qualifiedname>faiss::EnumeratedVectors::dim</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="58" column="9" bodyfile="faiss/impl/lattice_Zn.h" bodystart="58" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1ZnSphereCodec_1af1fb13145562d4f728b382c7feb42549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::ZnSphereCodec::ZnSphereCodec</definition>
        <argsstring>(int dim, int r2)</argsstring>
        <name>ZnSphereCodec</name>
        <qualifiedname>faiss::ZnSphereCodec::ZnSphereCodec</qualifiedname>
        <param>
          <type>int</type>
          <declname>dim</declname>
        </param>
        <param>
          <type>int</type>
          <declname>r2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="127" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ZnSphereCodec_1acc6dde9a8e1a725c259a6545e678c9ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t faiss::ZnSphereCodec::search_and_encode</definition>
        <argsstring>(const float *x) const</argsstring>
        <name>search_and_encode</name>
        <qualifiedname>faiss::ZnSphereCodec::search_and_encode</qualifiedname>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="129" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ZnSphereCodec_1abba759b93931fb0a38eb5af37bb3fe05" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void faiss::ZnSphereCodec::decode</definition>
        <argsstring>(uint64_t code, float *c) const override</argsstring>
        <name>decode</name>
        <qualifiedname>faiss::ZnSphereCodec::decode</qualifiedname>
        <reimplements refid="structfaiss_1_1EnumeratedVectors_1af11d64142e0f8ef62599077bdd6b7f88">decode</reimplements>
        <reimplementedby refid="structfaiss_1_1ZnSphereCodecAlt_1adfc4b82213e0d4d5b45396f19f07adcf">decode</reimplementedby>
        <param>
          <type>uint64_t</type>
          <declname>code</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>decode it </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="131" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ZnSphereCodec_1a323fcba5a65c35ea8dc7d2bda5d92f74" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>uint64_t</type>
        <definition>uint64_t faiss::ZnSphereCodec::encode</definition>
        <argsstring>(const float *x) const override</argsstring>
        <name>encode</name>
        <qualifiedname>faiss::ZnSphereCodec::encode</qualifiedname>
        <reimplements refid="structfaiss_1_1EnumeratedVectors_1a2ed0bdef51f569a62da6ca194143c2e5">encode</reimplements>
        <reimplementedby refid="structfaiss_1_1ZnSphereCodecAlt_1a229ea0dbfac8fd92d52ff8074b69573b">encode</reimplementedby>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>takes vectors that do not need to be centroids </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="134" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ZnSphereSearch_1adc8a713b54cc6be8c348c6e4545479d8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::ZnSphereSearch::search</definition>
        <argsstring>(const float *x, float *c) const</argsstring>
        <name>search</name>
        <qualifiedname>faiss::ZnSphereSearch::search</qualifiedname>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>find nearest centroid. x does not need to be normalized </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="35" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ZnSphereSearch_1a019c9b09e349e779330eb8c4690619c2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float faiss::ZnSphereSearch::search</definition>
        <argsstring>(const float *x, float *c, float *tmp, int *tmp_int, int *ibest_out=nullptr) const</argsstring>
        <name>search</name>
        <qualifiedname>faiss::ZnSphereSearch::search</qualifiedname>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>tmp</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>tmp_int</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>ibest_out</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
<para>full call. Requires externally-allocated temp space </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="38" column="11"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1ZnSphereSearch_1a00544df13ad01248f375894c31e220d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::ZnSphereSearch::search_multi</definition>
        <argsstring>(int n, const float *x, float *c_out, float *dp_out)</argsstring>
        <name>search_multi</name>
        <qualifiedname>faiss::ZnSphereSearch::search_multi</qualifiedname>
        <param>
          <type>int</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c_out</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dp_out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="46" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1EnumeratedVectors_1a4e75f2b3864128c1d1d3228f470d9e4e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::EnumeratedVectors::encode_multi</definition>
        <argsstring>(size_t nc, const float *c, uint64_t *codes) const</argsstring>
        <name>encode_multi</name>
        <qualifiedname>faiss::EnumeratedVectors::encode_multi</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nc</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>c</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>codes</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="69" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1EnumeratedVectors_1abdc3248bff9338da2ca6863799274d8b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::EnumeratedVectors::decode_multi</definition>
        <argsstring>(size_t nc, const uint64_t *codes, float *c) const</argsstring>
        <name>decode_multi</name>
        <qualifiedname>faiss::EnumeratedVectors::decode_multi</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>nc</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>codes</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="72" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1EnumeratedVectors_1a80c0f4e4cf5394b7fd2e7b91fab16538" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::EnumeratedVectors::find_nn</definition>
        <argsstring>(size_t n, const uint64_t *codes, size_t nq, const float *xq, int64_t *idx, float *dis)</argsstring>
        <name>find_nn</name>
        <qualifiedname>faiss::EnumeratedVectors::find_nn</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <param>
          <type>const uint64_t *</type>
          <declname>codes</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nq</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>xq</declname>
        </param>
        <param>
          <type>int64_t *</type>
          <declname>idx</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>dis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/impl/lattice_Zn.h" line="76" column="10"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>codec that can return ids for the encoded vectors</para>
<para>uses the <ref refid="structfaiss_1_1ZnSphereSearch" kindref="compound">ZnSphereSearch</ref> to encode the vector by encoding the permutation and signs. Depends on <ref refid="structfaiss_1_1ZnSphereSearch" kindref="compound">ZnSphereSearch</ref> because it uses the atom numbers </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>faiss::EnumeratedVectors</label>
        <link refid="structfaiss_1_1EnumeratedVectors"/>
      </node>
      <node id="1">
        <label>faiss::ZnSphereCodec</label>
        <link refid="structfaiss_1_1ZnSphereCodec"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>faiss::ZnSphereCodecAlt</label>
        <link refid="structfaiss_1_1ZnSphereCodecAlt"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::ZnSphereSearch</label>
        <link refid="structfaiss_1_1ZnSphereSearch"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>faiss::EnumeratedVectors</label>
        <link refid="structfaiss_1_1EnumeratedVectors"/>
      </node>
      <node id="1">
        <label>faiss::ZnSphereCodec</label>
        <link refid="structfaiss_1_1ZnSphereCodec"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::ZnSphereSearch</label>
        <link refid="structfaiss_1_1ZnSphereSearch"/>
      </node>
    </collaborationgraph>
    <location file="faiss/impl/lattice_Zn.h" line="116" column="1" bodyfile="faiss/impl/lattice_Zn.h" bodystart="116" bodyend="135"/>
    <listofallmembers>
      <member refid="structfaiss_1_1ZnSphereCodec_1a0381dd77adc1b9b7d3e3a27b71de708e" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>code_segments</name></member>
      <member refid="structfaiss_1_1ZnSphereCodec_1a6180455411065a1597575c3c6b817d90" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>code_size</name></member>
      <member refid="structfaiss_1_1ZnSphereCodec_1abba759b93931fb0a38eb5af37bb3fe05" prot="public" virt="virtual"><scope>faiss::ZnSphereCodec</scope><name>decode</name></member>
      <member refid="structfaiss_1_1EnumeratedVectors_1abdc3248bff9338da2ca6863799274d8b" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>decode_multi</name></member>
      <member refid="structfaiss_1_1EnumeratedVectors_1af35904a18c8ab0a8df9946822588d8a8" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>dim</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1a33cd49702699f73c9874523100cdfb4b" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>dimS</name></member>
      <member refid="structfaiss_1_1ZnSphereCodec_1a323fcba5a65c35ea8dc7d2bda5d92f74" prot="public" virt="virtual"><scope>faiss::ZnSphereCodec</scope><name>encode</name></member>
      <member refid="structfaiss_1_1EnumeratedVectors_1a4e75f2b3864128c1d1d3228f470d9e4e" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>encode_multi</name></member>
      <member refid="structfaiss_1_1EnumeratedVectors_1a11dbfb16f72980d69c4e40dc84e64258" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>EnumeratedVectors</name></member>
      <member refid="structfaiss_1_1EnumeratedVectors_1a80c0f4e4cf5394b7fd2e7b91fab16538" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>find_nn</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1a4616ccfd6403081036eb0e33dcebe867" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>natom</name></member>
      <member refid="structfaiss_1_1ZnSphereCodec_1a507bfb83a50ee559747b64d96fb27028" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>nv</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1adabda2cbab5856c0195a83133e48486d" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>r2</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1adc8a713b54cc6be8c348c6e4545479d8" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>search</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1a019c9b09e349e779330eb8c4690619c2" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>search</name></member>
      <member refid="structfaiss_1_1ZnSphereCodec_1acc6dde9a8e1a725c259a6545e678c9ae" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>search_and_encode</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1a00544df13ad01248f375894c31e220d8" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>search_multi</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1a77143a72b6a5048df0fa79b7134740d8" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>voc</name></member>
      <member refid="structfaiss_1_1ZnSphereCodec_1af1fb13145562d4f728b382c7feb42549" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>ZnSphereCodec</name></member>
      <member refid="structfaiss_1_1ZnSphereSearch_1ad5e5d02aa8ee21ab17f01f53e9d4f0cc" prot="public" virt="non-virtual"><scope>faiss::ZnSphereCodec</scope><name>ZnSphereSearch</name></member>
      <member refid="structfaiss_1_1EnumeratedVectors_1a849f82c1f0e1335eaf5385ebe3434af4" prot="public" virt="virtual"><scope>faiss::ZnSphereCodec</scope><name>~EnumeratedVectors</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
