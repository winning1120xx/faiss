<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classfaiss_1_1gpu_1_1CudaEvent" kind="class" language="C++" prot="public">
    <compoundname>faiss::gpu::CudaEvent</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classfaiss_1_1gpu_1_1CudaEvent_1a8aaeb33f793e5495ca2d12f76602b4e2" prot="private" static="no" mutable="no">
        <type>cudaEvent_t</type>
        <definition>cudaEvent_t faiss::gpu::CudaEvent::event_</definition>
        <argsstring></argsstring>
        <name>event_</name>
        <qualifiedname>faiss::gpu::CudaEvent::event_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="139" column="17" bodyfile="faiss/gpu/utils/DeviceUtils.h" bodystart="139" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1a53bb2b58bd6ddc1b9b8e317db8eb3e2a" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::CudaEvent::CudaEvent</definition>
        <argsstring>(cudaStream_t stream, bool timer=false)</argsstring>
        <name>CudaEvent</name>
        <qualifiedname>faiss::gpu::CudaEvent::CudaEvent</qualifiedname>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>timer</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>Creates an event and records it in this stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="120" column="14"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1ad72ad67f6eb35e7716ef153a6d212dc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::CudaEvent::CudaEvent</definition>
        <argsstring>(const CudaEvent &amp;event)=delete</argsstring>
        <name>CudaEvent</name>
        <qualifiedname>faiss::gpu::CudaEvent::CudaEvent</qualifiedname>
        <param>
          <type>const <ref refid="classfaiss_1_1gpu_1_1CudaEvent" kindref="compound">CudaEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="121" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1acf9a0e14a2b79745a45cff67e94988dd" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::CudaEvent::CudaEvent</definition>
        <argsstring>(CudaEvent &amp;&amp;event) noexcept</argsstring>
        <name>CudaEvent</name>
        <qualifiedname>faiss::gpu::CudaEvent::CudaEvent</qualifiedname>
        <param>
          <type><ref refid="classfaiss_1_1gpu_1_1CudaEvent" kindref="compound">CudaEvent</ref> &amp;&amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="122" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1a6ab1e9050459d4509daf294eb6e50ea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::CudaEvent::~CudaEvent</definition>
        <argsstring>()</argsstring>
        <name>~CudaEvent</name>
        <qualifiedname>faiss::gpu::CudaEvent::~CudaEvent</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="123" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1adfd9acdace7565145c339c7a3241e151" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>cudaEvent_t</type>
        <definition>cudaEvent_t faiss::gpu::CudaEvent::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>faiss::gpu::CudaEvent::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="125" column="24" bodyfile="faiss/gpu/utils/DeviceUtils.h" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1ad8968b298b95788c7679d7e5aa0571eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::gpu::CudaEvent::streamWaitOnEvent</definition>
        <argsstring>(cudaStream_t stream)</argsstring>
        <name>streamWaitOnEvent</name>
        <qualifiedname>faiss::gpu::CudaEvent::streamWaitOnEvent</qualifiedname>
        <param>
          <type>cudaStream_t</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>Wait on this event in this stream. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="130" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1a9c85540093aaf87de80ece9f854e7c57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::gpu::CudaEvent::cpuWaitOnEvent</definition>
        <argsstring>()</argsstring>
        <name>cpuWaitOnEvent</name>
        <qualifiedname>faiss::gpu::CudaEvent::cpuWaitOnEvent</qualifiedname>
        <briefdescription>
<para>Have the CPU wait for the completion of this event. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="133" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1abd1fe2e8b9152442bc154f66f5a227e3" prot="public" static="no" const="no" explicit="no" inline="no" noexcept="yes" virt="non-virtual">
        <type><ref refid="classfaiss_1_1gpu_1_1CudaEvent" kindref="compound">CudaEvent</ref> &amp;</type>
        <definition>CudaEvent &amp; faiss::gpu::CudaEvent::operator=</definition>
        <argsstring>(CudaEvent &amp;&amp;event) noexcept</argsstring>
        <name>operator=</name>
        <qualifiedname>faiss::gpu::CudaEvent::operator=</qualifiedname>
        <param>
          <type><ref refid="classfaiss_1_1gpu_1_1CudaEvent" kindref="compound">CudaEvent</ref> &amp;&amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="135" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classfaiss_1_1gpu_1_1CudaEvent_1a73bd505515cad0145c25f037a76902fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classfaiss_1_1gpu_1_1CudaEvent" kindref="compound">CudaEvent</ref> &amp;</type>
        <definition>CudaEvent &amp; faiss::gpu::CudaEvent::operator=</definition>
        <argsstring>(CudaEvent &amp;event)=delete</argsstring>
        <name>operator=</name>
        <qualifiedname>faiss::gpu::CudaEvent::operator=</qualifiedname>
        <param>
          <type><ref refid="classfaiss_1_1gpu_1_1CudaEvent" kindref="compound">CudaEvent</ref> &amp;</type>
          <declname>event</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/utils/DeviceUtils.h" line="136" column="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/gpu/utils/DeviceUtils.h" line="117" column="1" bodyfile="faiss/gpu/utils/DeviceUtils.h" bodystart="117" bodyend="140"/>
    <listofallmembers>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1a9c85540093aaf87de80ece9f854e7c57" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>cpuWaitOnEvent</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1a53bb2b58bd6ddc1b9b8e317db8eb3e2a" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>CudaEvent</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1ad72ad67f6eb35e7716ef153a6d212dc7" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>CudaEvent</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1acf9a0e14a2b79745a45cff67e94988dd" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>CudaEvent</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1a8aaeb33f793e5495ca2d12f76602b4e2" prot="private" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>event_</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1adfd9acdace7565145c339c7a3241e151" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>get</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1abd1fe2e8b9152442bc154f66f5a227e3" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>operator=</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1a73bd505515cad0145c25f037a76902fb" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>operator=</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1ad8968b298b95788c7679d7e5aa0571eb" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>streamWaitOnEvent</name></member>
      <member refid="classfaiss_1_1gpu_1_1CudaEvent_1a6ab1e9050459d4509daf294eb6e50ea3" prot="public" virt="non-virtual"><scope>faiss::gpu::CudaEvent</scope><name>~CudaEvent</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
