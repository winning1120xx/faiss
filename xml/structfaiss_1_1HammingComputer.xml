<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1HammingComputer" kind="struct" language="C++" prot="public">
    <compoundname>faiss::HammingComputer</compoundname>
    <basecompoundref refid="structfaiss_1_1HammingComputerDefault" prot="public" virt="non-virtual">faiss::HammingComputerDefault</basecompoundref>
    <templateparamlist>
      <param>
        <type>int</type>
        <declname>CODE_SIZE</declname>
        <defname>CODE_SIZE</defname>
      </param>
    </templateparamlist>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer_1a08ae6f504ef5b2bcd81df5f6ee45f8e4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer&lt; CODE_SIZE &gt;::HammingComputer</definition>
        <argsstring>(const uint8_t *a, int code_size)</argsstring>
        <name>HammingComputer</name>
        <qualifiedname>faiss::HammingComputer::HammingComputer</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/hamdis-inl.h" line="38" column="5" bodyfile="faiss/utils/hamming_distance/hamdis-inl.h" bodystart="38" bodyend="39"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1a3a15c465bd3c6f1101a5ea465fd6de18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputerDefault::set</definition>
        <argsstring>(const uint8_t *a8_2, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputerDefault::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="262" column="10" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="262" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1a3a15c465bd3c6f1101a5ea465fd6de18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputerDefault::set</definition>
        <argsstring>(const uint8_t *a8_2, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputerDefault::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8_2</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="276" column="10" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="276" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1a2738b8c53224a9d51df060d8efd062c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputerDefault::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputerDefault::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="263" column="10" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="263" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1aa114eb107f8cce136689b50d8dffafd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputerDefault::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="268" column="9" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="268" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1aa114eb107f8cce136689b50d8dffafd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputerDefault::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="282" column="9" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="282" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1aa114eb107f8cce136689b50d8dffafd1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputerDefault::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="269" column="9" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="269" bodyend="343"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1afbb41349cd834644fb6a239b2ee53cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::get_code_size</definition>
        <argsstring>() const</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputerDefault::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="343" column="16" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="343" bodyend="345"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1afbb41349cd834644fb6a239b2ee53cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::get_code_size</definition>
        <argsstring>() const</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputerDefault::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="371" column="16" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="371" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputerDefault_1afbb41349cd834644fb6a239b2ee53cca" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::get_code_size</definition>
        <argsstring>() const</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputerDefault::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="345" column="16" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="345" bodyend="347"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1HammingComputerDefault_1af09b17fa400adc6a3bed7acb47f5fff2" prot="public" static="no" mutable="no">
        <type>const uint8_t *</type>
        <definition>const uint8_t * faiss::HammingComputerDefault::a8</definition>
        <argsstring></argsstring>
        <name>a8</name>
        <qualifiedname>faiss::HammingComputerDefault::a8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="252" column="19" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputerDefault_1a690b6cdae0726c448e6da15ca03817bd" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::quotient8</definition>
        <argsstring></argsstring>
        <name>quotient8</name>
        <qualifiedname>faiss::HammingComputerDefault::quotient8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="253" column="9" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="253" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputerDefault_1a2653ab8230299d8f03f33c202a349850" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::HammingComputerDefault::remainder8</definition>
        <argsstring></argsstring>
        <name>remainder8</name>
        <qualifiedname>faiss::HammingComputerDefault::remainder8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="254" column="9" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="254" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>faiss::HammingComputer&lt; CODE_SIZE &gt;</label>
        <link refid="structfaiss_1_1HammingComputer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::HammingComputerDefault</label>
        <link refid="structfaiss_1_1HammingComputerDefault"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>faiss::HammingComputer&lt; CODE_SIZE &gt;</label>
        <link refid="structfaiss_1_1HammingComputer"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::HammingComputerDefault</label>
        <link refid="structfaiss_1_1HammingComputerDefault"/>
      </node>
    </collaborationgraph>
    <location file="faiss/utils/hamming_distance/hamdis-inl.h" line="37" column="1" bodyfile="faiss/utils/hamming_distance/hamdis-inl.h" bodystart="37" bodyend="40"/>
    <listofallmembers>
      <member refid="structfaiss_1_1HammingComputerDefault_1af09b17fa400adc6a3bed7acb47f5fff2" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>a8</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1afbb41349cd834644fb6a239b2ee53cca" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1afbb41349cd834644fb6a239b2ee53cca" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1afbb41349cd834644fb6a239b2ee53cca" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1aa114eb107f8cce136689b50d8dffafd1" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1aa114eb107f8cce136689b50d8dffafd1" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1aa114eb107f8cce136689b50d8dffafd1" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer_1a08ae6f504ef5b2bcd81df5f6ee45f8e4" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>HammingComputer</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a7de248d27a0a9bad5f551206f1f7e87c" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>HammingComputerDefault</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a811e3f5db91b6a5f6eba731e514910fa" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>HammingComputerDefault</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a7de248d27a0a9bad5f551206f1f7e87c" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>HammingComputerDefault</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a811e3f5db91b6a5f6eba731e514910fa" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>HammingComputerDefault</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a7de248d27a0a9bad5f551206f1f7e87c" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>HammingComputerDefault</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a811e3f5db91b6a5f6eba731e514910fa" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>HammingComputerDefault</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a690b6cdae0726c448e6da15ca03817bd" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>quotient8</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a2653ab8230299d8f03f33c202a349850" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>remainder8</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a3a15c465bd3c6f1101a5ea465fd6de18" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a3a15c465bd3c6f1101a5ea465fd6de18" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputerDefault_1a2738b8c53224a9d51df060d8efd062c8" prot="public" virt="non-virtual"><scope>faiss::HammingComputer</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
