<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1HammingComputer20" kind="struct" language="C++" prot="public">
    <compoundname>faiss::HammingComputer20</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer20_1a295014fba5155a1b11334550238a9314" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer20::a0</definition>
        <argsstring></argsstring>
        <name>a0</name>
        <qualifiedname>faiss::HammingComputer20::a0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="159" column="14" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer20_1ad49e5fd538eeb912e82f8c2238332ecf" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer20::a1</definition>
        <argsstring></argsstring>
        <name>a1</name>
        <qualifiedname>faiss::HammingComputer20::a1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="159" column="17" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer20_1adac01f724344b881074435ea57d0dd8f" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t faiss::HammingComputer20::a2</definition>
        <argsstring></argsstring>
        <name>a2</name>
        <qualifiedname>faiss::HammingComputer20::a2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="160" column="14" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="160" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1abf473d14e68eec988af8cd98dfd42813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer20::HammingComputer20</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer20</name>
        <qualifiedname>faiss::HammingComputer20::HammingComputer20</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="162" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a7578abb60161cf73536930378917c388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer20::HammingComputer20</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer20</name>
        <qualifiedname>faiss::HammingComputer20::HammingComputer20</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="164" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a678f2a0b38e9a6f95a562b3dc6030998" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer20::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer20::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="168" column="10" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="168" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a804e63f18ba84f9fa384c5859403f488" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer20::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer20::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="176" column="16" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="176" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1abf473d14e68eec988af8cd98dfd42813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer20::HammingComputer20</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer20</name>
        <qualifiedname>faiss::HammingComputer20::HammingComputer20</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="167" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="167" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a7578abb60161cf73536930378917c388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer20::HammingComputer20</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer20</name>
        <qualifiedname>faiss::HammingComputer20::HammingComputer20</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="169" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a678f2a0b38e9a6f95a562b3dc6030998" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer20::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer20::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="173" column="10" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="173" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a804e63f18ba84f9fa384c5859403f488" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer20::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer20::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="181" column="16" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="181" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1abf473d14e68eec988af8cd98dfd42813" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer20::HammingComputer20</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer20</name>
        <qualifiedname>faiss::HammingComputer20::HammingComputer20</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="160" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="160" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a7578abb60161cf73536930378917c388" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer20::HammingComputer20</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer20</name>
        <qualifiedname>faiss::HammingComputer20::HammingComputer20</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="162" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="162" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a678f2a0b38e9a6f95a562b3dc6030998" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer20::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer20::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="166" column="10" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="166" bodyend="175"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1a804e63f18ba84f9fa384c5859403f488" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer20::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer20::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="177" column="16" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="177" bodyend="181"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1afd442e4c2f175e12258a91d76feaf097" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer20::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer20::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="182" column="33" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="182" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1afd442e4c2f175e12258a91d76feaf097" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer20::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer20::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="187" column="33" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="187" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer20_1afd442e4c2f175e12258a91d76feaf097" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer20::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer20::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="183" column="33" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="183" bodyend="185"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/utils/hamming_distance/avx2-inl.h" line="158" column="1" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="158" bodyend="185"/>
    <listofallmembers>
      <member refid="structfaiss_1_1HammingComputer20_1a295014fba5155a1b11334550238a9314" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>a0</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1ad49e5fd538eeb912e82f8c2238332ecf" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>a1</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1adac01f724344b881074435ea57d0dd8f" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>a2</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1afd442e4c2f175e12258a91d76feaf097" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1afd442e4c2f175e12258a91d76feaf097" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1afd442e4c2f175e12258a91d76feaf097" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a804e63f18ba84f9fa384c5859403f488" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a804e63f18ba84f9fa384c5859403f488" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a804e63f18ba84f9fa384c5859403f488" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1abf473d14e68eec988af8cd98dfd42813" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>HammingComputer20</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a7578abb60161cf73536930378917c388" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>HammingComputer20</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1abf473d14e68eec988af8cd98dfd42813" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>HammingComputer20</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a7578abb60161cf73536930378917c388" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>HammingComputer20</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1abf473d14e68eec988af8cd98dfd42813" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>HammingComputer20</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a7578abb60161cf73536930378917c388" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>HammingComputer20</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a678f2a0b38e9a6f95a562b3dc6030998" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a678f2a0b38e9a6f95a562b3dc6030998" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer20_1a678f2a0b38e9a6f95a562b3dc6030998" prot="public" virt="non-virtual"><scope>faiss::HammingComputer20</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
