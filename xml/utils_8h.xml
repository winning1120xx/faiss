<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="utils_8h" kind="file" language="C++">
    <compoundname>utils.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">set</includes>
    <includes local="no">string</includes>
    <includes local="no">vector</includes>
    <includes refid="platform__macros_8h" local="no">faiss/impl/platform_macros.h</includes>
    <includes refid="Heap_8h" local="no">faiss/utils/Heap.h</includes>
    <includedby refid="IndexBinaryHNSW_8h" local="no">faiss/IndexBinaryHNSW.h</includedby>
    <includedby refid="IndexHNSW_8h" local="no">faiss/IndexHNSW.h</includedby>
    <includedby refid="IndexNNDescent_8h" local="no">faiss/IndexNNDescent.h</includedby>
    <includedby refid="IndexNSG_8h" local="no">faiss/IndexNSG.h</includedby>
    <includedby refid="LocalSearchQuantizer_8h" local="no">faiss/impl/LocalSearchQuantizer.h</includedby>
    <incdepgraph>
      <node id="6">
        <label>faiss/impl/platform_macros.h</label>
        <link refid="platform__macros_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>faiss/utils/Heap.h</label>
        <link refid="Heap_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>faiss/utils/ordered_key_value.h</label>
        <link refid="ordered__key__value_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>faiss/utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>cassert</label>
      </node>
      <node id="10">
        <label>climits</label>
      </node>
      <node id="11">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>cstdint</label>
      </node>
      <node id="8">
        <label>cstdio</label>
      </node>
      <node id="12">
        <label>cstring</label>
      </node>
      <node id="14">
        <label>limits</label>
      </node>
      <node id="3">
        <label>set</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="15">
        <label>utility</label>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>faiss/IndexAdditiveQuantizer.h</label>
        <link refid="IndexAdditiveQuantizer_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>faiss/IndexAdditiveQuantizerFastScan.h</label>
        <link refid="IndexAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="2">
        <label>faiss/IndexBinaryHNSW.h</label>
        <link refid="IndexBinaryHNSW_8h_source"/>
      </node>
      <node id="3">
        <label>faiss/IndexHNSW.h</label>
        <link refid="IndexHNSW_8h_source"/>
      </node>
      <node id="9">
        <label>faiss/IndexIVFAdditiveQuantizer.h</label>
        <link refid="IndexIVFAdditiveQuantizer_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>faiss/IndexIVFAdditiveQuantizerFastScan.h</label>
        <link refid="IndexIVFAdditiveQuantizerFastScan_8h_source"/>
      </node>
      <node id="4">
        <label>faiss/IndexNNDescent.h</label>
        <link refid="IndexNNDescent_8h_source"/>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>faiss/IndexNSG.h</label>
        <link refid="IndexNSG_8h_source"/>
      </node>
      <node id="11">
        <label>faiss/gpu/GpuIcmEncoder.h</label>
        <link refid="GpuIcmEncoder_8h_source"/>
      </node>
      <node id="6">
        <label>faiss/impl/LocalSearchQuantizer.h</label>
        <link refid="LocalSearchQuantizer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>faiss/impl/ProductAdditiveQuantizer.h</label>
        <link refid="ProductAdditiveQuantizer_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>faiss/utils/utils.h</label>
        <link refid="utils_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="structfaiss_1_1CombinerRangeKNN" prot="public">faiss::CombinerRangeKNN</innerclass>
    <innerclass refid="structfaiss_1_1CodeSet" prot="public">faiss::CodeSet</innerclass>
    <innernamespace refid="namespacefaiss">faiss</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>Meta<sp/>Platforms,<sp/>Inc.<sp/>and<sp/>affiliates.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>This<sp/>source<sp/>code<sp/>is<sp/>licensed<sp/>under<sp/>the<sp/>MIT<sp/>license<sp/>found<sp/>in<sp/>the</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>LICENSE<sp/>file<sp/>in<sp/>the<sp/>root<sp/>directory<sp/>of<sp/>this<sp/>source<sp/>tree.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">//<sp/>-*-<sp/>c++<sp/>-*-</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>A<sp/>few<sp/>utilitary<sp/>functions<sp/>for<sp/>similarity<sp/>search:</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>-<sp/>optimized<sp/>exhaustive<sp/>distance<sp/>and<sp/>knn<sp/>search<sp/>functions</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>-<sp/>some<sp/>functions<sp/>reimplemented<sp/>from<sp/>torch<sp/>for<sp/>speed</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>FAISS_utils_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>FAISS_utils_h</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;set&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/impl/platform_macros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;faiss/utils/Heap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacefaiss" kindref="compound">faiss</ref><sp/>{</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="comment">/****************************************************************************</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*<sp/>Get<sp/>compile<sp/>specific<sp/>variables</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">///<sp/>get<sp/>compile<sp/>options</highlight></codeline>
<codeline lineno="34" refid="namespacefaiss_1a2356cfad1b4e1bd20c31fdf97e6429d9" refkind="member"><highlight class="comment"></highlight><highlight class="normal">std::string<sp/><ref refid="namespacefaiss_1a2356cfad1b4e1bd20c31fdf97e6429d9" kindref="member">get_compile_options</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="comment">/**************************************************</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*<sp/>Get<sp/>some<sp/>stats<sp/>about<sp/>the<sp/>system</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>**************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Expose<sp/>Faiss<sp/>version<sp/>as<sp/>a<sp/>string</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal">std::string<sp/>get_version();</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment">///<sp/>ms<sp/>elapsed<sp/>since<sp/>some<sp/>arbitrary<sp/>epoch</highlight></codeline>
<codeline lineno="44" refid="namespacefaiss_1af2a71f7d5402ae02ce169a4cc83020eb" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1af2a71f7d5402ae02ce169a4cc83020eb" kindref="member">getmillisecs</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">///<sp/>get<sp/>current<sp/>RSS<sp/>usage<sp/>in<sp/>kB</highlight></codeline>
<codeline lineno="47" refid="namespacefaiss_1aa3af5769b0b649f112332a874c64d361" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1aa3af5769b0b649f112332a874c64d361" kindref="member">get_mem_usage_kb</ref>();</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal">uint64_t<sp/>get_cycles();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">/***************************************************************************</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*<sp/>Misc<sp/><sp/>matrix<sp/>and<sp/>vector<sp/>manipulation<sp/>functions</highlight></codeline>
<codeline lineno="53"><highlight class="comment"><sp/>***************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>perform<sp/>a<sp/>reflection<sp/>(not<sp/>an<sp/>efficient<sp/>implementation,<sp/>just<sp/>for<sp/>test<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>reflection(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>u,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nu);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**<sp/>compute<sp/>the<sp/>Q<sp/>of<sp/>the<sp/>QR<sp/>decomposition<sp/>for<sp/>m<sp/>&gt;<sp/>n</highlight></codeline>
<codeline lineno="59"><highlight class="comment"><sp/>*<sp/>@param<sp/>a<sp/><sp/><sp/>size<sp/>n<sp/>*<sp/>m:<sp/>input<sp/>matrix<sp/>and<sp/>output<sp/>Q</highlight></codeline>
<codeline lineno="60"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="namespacefaiss_1afb68fe89ad5e948974da1b70d7b4157c" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1afb68fe89ad5e948974da1b70d7b4157c" kindref="member">matrix_qr</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>a);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="63"><highlight class="comment">/**<sp/>distances<sp/>are<sp/>supposed<sp/>to<sp/>be<sp/>sorted.<sp/>Sorts<sp/>indices<sp/>with<sp/>same<sp/>distance*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="namespacefaiss_1ad5827240bc67d6f8a612ba8761b34714" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1ad5827240bc67d6f8a612ba8761b34714" kindref="member">ranklist_handle_ties</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/>int64_t*<sp/>idx,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>dis);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">/**<sp/>count<sp/>the<sp/>number<sp/>of<sp/>common<sp/>elements<sp/>between<sp/>v1<sp/>and<sp/>v2</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*<sp/>algorithm<sp/>=<sp/>sorting<sp/>+<sp/>bissection<sp/>to<sp/>avoid<sp/>double-counting<sp/>duplicates</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="namespacefaiss_1a104f2c4626def41c53ad1ca0027741cb" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1a104f2c4626def41c53ad1ca0027741cb" kindref="member">ranklist_intersection_size</ref>(</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k1,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>v1,</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k2,</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>v2);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="75"><highlight class="comment">/**<sp/>merge<sp/>a<sp/>result<sp/>table<sp/>into<sp/>another<sp/>one</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>@param<sp/>I0,<sp/>D0<sp/><sp/><sp/><sp/><sp/><sp/><sp/>first<sp/>result<sp/>table,<sp/>size<sp/>(n,<sp/>k)</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*<sp/>@param<sp/>I1,<sp/>D1<sp/><sp/><sp/><sp/><sp/><sp/><sp/>second<sp/>result<sp/>table,<sp/>size<sp/>(n,<sp/>k)</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/>*<sp/>@param<sp/>keep_min<sp/><sp/><sp/><sp/><sp/>if<sp/>true,<sp/>keep<sp/>min<sp/>values,<sp/>otherwise<sp/>keep<sp/>max</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/>*<sp/>@param<sp/>translation<sp/><sp/>add<sp/>this<sp/>value<sp/>to<sp/>all<sp/>I1&apos;s<sp/>indexes</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nb<sp/>of<sp/>values<sp/>that<sp/>were<sp/>taken<sp/>from<sp/>the<sp/>second<sp/>table</highlight></codeline>
<codeline lineno="82"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="namespacefaiss_1a7690bafb56c991da908ee11822c7a8da" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1a7690bafb56c991da908ee11822c7a8da" kindref="member">merge_result_table_with</ref>(</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>k,</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t*<sp/>I0,</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>D0,</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>I1,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>D1,</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>keep_min<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>translation<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="93"><highlight class="comment">///<sp/>a<sp/>balanced<sp/>assignment<sp/>has<sp/>a<sp/>IF<sp/>of<sp/>1,<sp/>a<sp/>completely<sp/>unbalanced<sp/>assignment<sp/>has</highlight></codeline>
<codeline lineno="94"><highlight class="comment">///<sp/>an<sp/>IF<sp/>=<sp/>k.</highlight></codeline>
<codeline lineno="95" refid="namespacefaiss_1a6bd11ae949782797ec7ad9e6cf562328" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1a6bd11ae949782797ec7ad9e6cf562328" kindref="member">imbalance_factor</ref>(int64_t<sp/>n,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>assign);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="97"><highlight class="comment">///<sp/>same,<sp/>takes<sp/>a<sp/>histogram<sp/>as<sp/>input</highlight></codeline>
<codeline lineno="98" refid="namespacefaiss_1ae6e153c78a45f44e454afe6778957a68" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1a6bd11ae949782797ec7ad9e6cf562328" kindref="member">imbalance_factor</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/>hist);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">///<sp/>compute<sp/>histogram<sp/>on<sp/>v</highlight></codeline>
<codeline lineno="101" refid="namespacefaiss_1a7bea462108bee98d8d5859b51ec4db8e" refkind="member"><highlight class="comment"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1a7bea462108bee98d8d5859b51ec4db8e" kindref="member">ivec_hist</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>v,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>vmax,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>hist);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**<sp/>Compute<sp/>histogram<sp/>of<sp/>bits<sp/>on<sp/>a<sp/>code<sp/>array</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/>@param<sp/>codes<sp/><sp/><sp/>size(n,<sp/>nbits<sp/>/<sp/>8)</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/>@param<sp/>hist<sp/><sp/><sp/><sp/>size(nbits):<sp/>nb<sp/>of<sp/>1s<sp/>in<sp/>the<sp/>array<sp/>of<sp/>codes</highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="namespacefaiss_1a154a47857ed321b9db91122770a16e09" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1a154a47857ed321b9db91122770a16e09" kindref="member">bincode_hist</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nbits,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>codes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>hist);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">///<sp/>compute<sp/>a<sp/>checksum<sp/>on<sp/>a<sp/>table.</highlight></codeline>
<codeline lineno="111" refid="namespacefaiss_1a9961a06bc9beb19366bb0437e11ac962" refkind="member"><highlight class="comment"></highlight><highlight class="normal">uint64_t<sp/><ref refid="namespacefaiss_1a9961a06bc9beb19366bb0437e11ac962" kindref="member">ivec_checksum</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int32_t*<sp/>a);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">///<sp/>compute<sp/>a<sp/>checksum<sp/>on<sp/>a<sp/>table.</highlight></codeline>
<codeline lineno="114" refid="namespacefaiss_1ade786759a9b5dbd0b2329966756c0b77" refkind="member"><highlight class="comment"></highlight><highlight class="normal">uint64_t<sp/><ref refid="namespacefaiss_1ade786759a9b5dbd0b2329966756c0b77" kindref="member">bvec_checksum</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>a);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="116"><highlight class="comment">/**<sp/>compute<sp/>checksums<sp/>for<sp/>the<sp/>rows<sp/>of<sp/>a<sp/>matrix</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>@param<sp/>n<sp/><sp/><sp/>number<sp/>of<sp/>rows</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>@param<sp/>d<sp/><sp/><sp/>size<sp/>per<sp/>row</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>@param<sp/>a<sp/><sp/><sp/>matrix<sp/>to<sp/>handle,<sp/>size<sp/>n<sp/>*<sp/>d</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>@param<sp/>cs<sp/><sp/>output<sp/>checksums,<sp/>size<sp/>n</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="namespacefaiss_1a2de355ba1527a128fdd6895a4a9cdd7a" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1a2de355ba1527a128fdd6895a4a9cdd7a" kindref="member">bvecs_checksum</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>a,<sp/>uint64_t*<sp/>cs);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment">/**<sp/>random<sp/>subsamples<sp/>a<sp/>set<sp/>of<sp/>vectors<sp/>if<sp/>there<sp/>are<sp/>too<sp/>many<sp/>of<sp/>them</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/>@param<sp/>d<sp/><sp/><sp/><sp/><sp/><sp/>dimension<sp/>of<sp/>the<sp/>vectors</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@param<sp/>n<sp/><sp/><sp/><sp/><sp/><sp/>on<sp/>input:<sp/>nb<sp/>of<sp/>input<sp/>vectors,<sp/>output:<sp/>nb<sp/>of<sp/>output<sp/>vectors</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>@param<sp/>nmax<sp/><sp/><sp/>max<sp/>nb<sp/>of<sp/>vectors<sp/>to<sp/>keep</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>@param<sp/>x<sp/><sp/><sp/><sp/><sp/><sp/>input<sp/>array,<sp/>size<sp/>*n-by-d</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>@param<sp/>seed<sp/><sp/><sp/>random<sp/>seed<sp/>to<sp/>use<sp/>for<sp/>sampling</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>@return<sp/><sp/><sp/><sp/><sp/><sp/><sp/>x<sp/>or<sp/>an<sp/>array<sp/>allocated<sp/>with<sp/>new<sp/>[]<sp/>with<sp/>*n<sp/>vectors</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="namespacefaiss_1a184bb08545d1f469662b75b2f33a899f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><ref refid="namespacefaiss_1a184bb08545d1f469662b75b2f33a899f" kindref="member">fvecs_maybe_subsample</ref>(</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal">*<sp/>n,</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>nmax,</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x,</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>verbose<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/>seed<sp/>=<sp/>1234);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="142"><highlight class="comment">/**<sp/>Convert<sp/>binary<sp/>vector<sp/>to<sp/>+1/-1<sp/>valued<sp/>float<sp/>vector.</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>@param<sp/>d<sp/><sp/><sp/><sp/><sp/><sp/>dimension<sp/>of<sp/>the<sp/>vector<sp/>(multiple<sp/>of<sp/>8)</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>@param<sp/>x_in<sp/><sp/><sp/>input<sp/>binary<sp/>vector<sp/>(uint8_t<sp/>table<sp/>of<sp/>size<sp/>d<sp/>/<sp/>8)</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>@param<sp/>x_out<sp/><sp/>output<sp/>float<sp/>vector<sp/>(float<sp/>table<sp/>of<sp/>size<sp/>d)</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="namespacefaiss_1ac8260e10cfeed08a4344b85845773e16" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1ac8260e10cfeed08a4344b85845773e16" kindref="member">binary_to_real</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>x_in,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x_out);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment">/**<sp/>Convert<sp/>float<sp/>vector<sp/>to<sp/>binary<sp/>vector.<sp/>Components<sp/>&gt;<sp/>0<sp/>are<sp/>converted<sp/>to<sp/>1,</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/>others<sp/>to<sp/>0.</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>@param<sp/>d<sp/><sp/><sp/><sp/><sp/><sp/>dimension<sp/>of<sp/>the<sp/>vector<sp/>(multiple<sp/>of<sp/>8)</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>@param<sp/>x_in<sp/><sp/><sp/>input<sp/>float<sp/>vector<sp/>(float<sp/>table<sp/>of<sp/>size<sp/>d)</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>@param<sp/>x_out<sp/><sp/>output<sp/>binary<sp/>vector<sp/>(uint8_t<sp/>table<sp/>of<sp/>size<sp/>d<sp/>/<sp/>8)</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="namespacefaiss_1ab491c9e2f77a750c9f0324bfe00e3e57" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1ab491c9e2f77a750c9f0324bfe00e3e57" kindref="member">real_to_binary</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>x_in,<sp/>uint8_t*<sp/>x_out);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">/**<sp/>A<sp/>reasonable<sp/>hashing<sp/>function<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="namespacefaiss_1a0e26e4710a7c276f46b730d8ab6ac1e0" refkind="member"><highlight class="normal">uint64_t<sp/><ref refid="namespacefaiss_1a0e26e4710a7c276f46b730d8ab6ac1e0" kindref="member">hash_bytes</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>bytes,<sp/>int64_t<sp/>n);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">/**<sp/>Whether<sp/>OpenMP<sp/>annotations<sp/>were<sp/>respected.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163" refid="namespacefaiss_1ad86caef545c6a7672422d7d34c03f446" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespacefaiss_1ad86caef545c6a7672422d7d34c03f446" kindref="member">check_openmp</ref>();</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="165"><highlight class="comment">/**<sp/>This<sp/>class<sp/>is<sp/>used<sp/>to<sp/>combine<sp/>range<sp/>and<sp/>knn<sp/>search<sp/>results</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/>in<sp/>contrib.exhaustive_search.range_search_gpu<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="169" refid="structfaiss_1_1CombinerRangeKNN" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfaiss_1_1CombinerRangeKNN" kindref="compound">CombinerRangeKNN</ref><sp/>{</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>int64_t<sp/>nq;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">///<sp/>nb<sp/>of<sp/>queries</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171" refid="structfaiss_1_1CombinerRangeKNN_1a512c0573e1f6d06edbd52efc713bd87e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a512c0573e1f6d06edbd52efc713bd87e" kindref="member">k</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///<sp/>number<sp/>of<sp/>neighbors<sp/>for<sp/>the<sp/>knn<sp/>search<sp/>part</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172" refid="structfaiss_1_1CombinerRangeKNN_1a533c4abee4eda14e5d3d7c1aa9ae00fa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a533c4abee4eda14e5d3d7c1aa9ae00fa" kindref="member">r2</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///<sp/>range<sp/>search<sp/>radius</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173" refid="structfaiss_1_1CombinerRangeKNN_1a2bfdb0e40d08040b47b2684fec5f0674" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a2bfdb0e40d08040b47b2684fec5f0674" kindref="member">keep_max</ref>;<sp/></highlight><highlight class="comment">///<sp/>whether<sp/>to<sp/>keep<sp/>max<sp/>values<sp/>instead<sp/>of<sp/>min.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="structfaiss_1_1CombinerRangeKNN_1a74330b6afb5296263e2a53482178c35d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a74330b6afb5296263e2a53482178c35d" kindref="member">CombinerRangeKNN</ref>(int64_t<sp/>nq,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a512c0573e1f6d06edbd52efc713bd87e" kindref="member">k</ref>,<sp/>T<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a533c4abee4eda14e5d3d7c1aa9ae00fa" kindref="member">r2</ref>,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a2bfdb0e40d08040b47b2684fec5f0674" kindref="member">keep_max</ref>)</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>nq(nq),<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a512c0573e1f6d06edbd52efc713bd87e" kindref="member">k</ref>(<ref refid="structfaiss_1_1CombinerRangeKNN_1a512c0573e1f6d06edbd52efc713bd87e" kindref="member">k</ref>),<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a533c4abee4eda14e5d3d7c1aa9ae00fa" kindref="member">r2</ref>(<ref refid="structfaiss_1_1CombinerRangeKNN_1a533c4abee4eda14e5d3d7c1aa9ae00fa" kindref="member">r2</ref>),<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a2bfdb0e40d08040b47b2684fec5f0674" kindref="member">keep_max</ref>(<ref refid="structfaiss_1_1CombinerRangeKNN_1a2bfdb0e40d08040b47b2684fec5f0674" kindref="member">keep_max</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Knn<sp/>search<sp/>results</highlight></codeline>
<codeline lineno="179" refid="structfaiss_1_1CombinerRangeKNN_1a092c91d01f6227c4acc437d0d2805e2e" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a092c91d01f6227c4acc437d0d2805e2e" kindref="member">I</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///<sp/>size<sp/>nq<sp/>*<sp/>k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180" refid="structfaiss_1_1CombinerRangeKNN_1adb040f0aab9e0822cf97b7ae8f77554c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1adb040f0aab9e0822cf97b7ae8f77554c" kindref="member">D</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///<sp/>size<sp/>nq<sp/>*<sp/>k</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>optional:<sp/>range<sp/>search<sp/>results<sp/>(ignored<sp/>if<sp/>mask<sp/>is<sp/>NULL)</highlight></codeline>
<codeline lineno="183" refid="structfaiss_1_1CombinerRangeKNN_1a99ffc825bff4b6bc07b5e3f3087d5a4d" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a99ffc825bff4b6bc07b5e3f3087d5a4d" kindref="member">mask</ref><sp/>=</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///<sp/>mask<sp/>for<sp/>where<sp/>knn<sp/>results<sp/>are<sp/>valid,<sp/>size<sp/>nq</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>range<sp/>search<sp/>results<sp/>for<sp/>remaining<sp/>entries<sp/>nrange<sp/>=<sp/>sum(mask)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="structfaiss_1_1CombinerRangeKNN_1af170c7fc6b3ff56a93f0a0141a49265d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1af170c7fc6b3ff56a93f0a0141a49265d" kindref="member">lim_remain</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///<sp/>size<sp/>nrange<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187" refid="structfaiss_1_1CombinerRangeKNN_1a8a4621b4b68545cbd08269086be63fa6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a8a4621b4b68545cbd08269086be63fa6" kindref="member">D_remain</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">///<sp/>size<sp/>lim_remain[nrange]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="structfaiss_1_1CombinerRangeKNN_1a328ba7a9c54628328b3594d3e767abff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1a328ba7a9c54628328b3594d3e767abff" kindref="member">I_remain</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/><sp/><sp/></highlight><highlight class="comment">///<sp/>size<sp/>lim_remain[nrange]</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="structfaiss_1_1CombinerRangeKNN_1aa14fedf775fc3f0a1f060d693be75430" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>int64_t*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1aa14fedf775fc3f0a1f060d693be75430" kindref="member">L_res</ref><sp/>=<sp/></highlight><highlight class="keyword">nullptr</highlight><highlight class="normal">;<sp/></highlight><highlight class="comment">///<sp/>size<sp/>nq<sp/>+<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Phase<sp/>1:<sp/>compute<sp/>sizes<sp/>into<sp/>limits<sp/>array<sp/>(of<sp/>size<sp/>nq<sp/>+<sp/>1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192" refid="structfaiss_1_1CombinerRangeKNN_1adbefea1de2c511a05d0980eaa7134fca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1adbefea1de2c511a05d0980eaa7134fca" kindref="member">compute_sizes</ref>(int64_t*<sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1aa14fedf775fc3f0a1f060d693be75430" kindref="member">L_res</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Phase<sp/>2:<sp/>caller<sp/>allocates<sp/>D_res<sp/>and<sp/>I_res<sp/>(size<sp/>L_res[nq])</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/><sp/><sp/><sp/>///<sp/>Phase<sp/>3:<sp/>fill<sp/>in<sp/>D_res<sp/>and<sp/>I_res</highlight></codeline>
<codeline lineno="196" refid="structfaiss_1_1CombinerRangeKNN_1ae4dc62c36a66b7ebfc3076f2a35a911f" refkind="member"><highlight class="comment"></highlight><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CombinerRangeKNN_1ae4dc62c36a66b7ebfc3076f2a35a911f" kindref="member">write_result</ref>(T*<sp/>D_res,<sp/>int64_t*<sp/>I_res);</highlight></codeline>
<codeline lineno="197"><highlight class="normal">};</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="structfaiss_1_1CodeSet" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structfaiss_1_1CodeSet" kindref="compound">CodeSet</ref><sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::set&lt;std::vector&lt;uint8_t&gt;&gt;<sp/>s;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="structfaiss_1_1CodeSet" kindref="compound">CodeSet</ref>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>d)<sp/>:<sp/>d(d)<sp/>{}</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>insert(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>n,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint8_t*<sp/>codes,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal">*<sp/>inserted);</highlight></codeline>
<codeline lineno="205"><highlight class="normal">};</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>faiss</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>FAISS_utils_h<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="faiss/utils/utils.h"/>
  </compounddef>
</doxygen>
