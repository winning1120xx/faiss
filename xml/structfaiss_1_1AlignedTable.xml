<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1AlignedTable" kind="struct" language="C++" prot="public">
    <compoundname>faiss::AlignedTable</compoundname>
    <templateparamlist>
      <param>
        <type>class T</type>
      </param>
      <param>
        <type>int</type>
        <declname>A</declname>
        <defname>A</defname>
        <defval>32</defval>
      </param>
    </templateparamlist>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1AlignedTable_1a6b71c9654cff088a16e5c24466379774" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1AlignedTableTightAlloc" kindref="compound">AlignedTableTightAlloc</ref>&lt; T, A &gt;</type>
        <definition>AlignedTableTightAlloc&lt;T, A&gt; faiss::AlignedTable&lt; T, A &gt;::tab</definition>
        <argsstring></argsstring>
        <name>tab</name>
        <qualifiedname>faiss::AlignedTable::tab</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="118" column="28" bodyfile="faiss/utils/AlignedTable.h" bodystart="118" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1AlignedTable_1a9faf9b717285bba439b0868722a34186" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::AlignedTable&lt; T, A &gt;::numel</definition>
        <argsstring></argsstring>
        <name>numel</name>
        <qualifiedname>faiss::AlignedTable::numel</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="119" column="12" bodyfile="faiss/utils/AlignedTable.h" bodystart="119" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1ae0743223b636cb6797dc8c339754fffa" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>static size_t faiss::AlignedTable&lt; T, A &gt;::round_capacity</definition>
        <argsstring>(size_t n)</argsstring>
        <name>round_capacity</name>
        <qualifiedname>faiss::AlignedTable::round_capacity</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="121" column="19" bodyfile="faiss/utils/AlignedTable.h" bodystart="121" bodyend="133"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a9df42e6d089361f2660ea055bea750af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::AlignedTable&lt; T, A &gt;::AlignedTable</definition>
        <argsstring>()</argsstring>
        <name>AlignedTable</name>
        <qualifiedname>faiss::AlignedTable::AlignedTable</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="135" column="5" bodyfile="faiss/utils/AlignedTable.h" bodystart="135" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1ab2d470841a876c31018c80de70f93032" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::AlignedTable&lt; T, A &gt;::AlignedTable</definition>
        <argsstring>(size_t n)</argsstring>
        <name>AlignedTable</name>
        <qualifiedname>faiss::AlignedTable::AlignedTable</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="137" column="14" bodyfile="faiss/utils/AlignedTable.h" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a3108042082ac79a6b52fa66fc7f3dbf4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::AlignedTable&lt; T, A &gt;::itemsize</definition>
        <argsstring>() const</argsstring>
        <name>itemsize</name>
        <qualifiedname>faiss::AlignedTable::itemsize</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="139" column="12" bodyfile="faiss/utils/AlignedTable.h" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a4ad035d22369fd0d96690cc3dd56b627" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::AlignedTable&lt; T, A &gt;::resize</definition>
        <argsstring>(size_t n)</argsstring>
        <name>resize</name>
        <qualifiedname>faiss::AlignedTable::resize</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>n</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="143" column="10" bodyfile="faiss/utils/AlignedTable.h" bodystart="143" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a0fc44abce1af64d2f3ec818c4a162322" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::AlignedTable&lt; T, A &gt;::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>faiss::AlignedTable::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="148" column="10" bodyfile="faiss/utils/AlignedTable.h" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1acc0383c46b807d32ed509e4f38e6f302" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::AlignedTable&lt; T, A &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>faiss::AlignedTable::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="151" column="12" bodyfile="faiss/utils/AlignedTable.h" bodystart="151" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1ad1dc0523838baffe40691da967bc2323" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t faiss::AlignedTable&lt; T, A &gt;::nbytes</definition>
        <argsstring>() const</argsstring>
        <name>nbytes</name>
        <qualifiedname>faiss::AlignedTable::nbytes</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="154" column="12" bodyfile="faiss/utils/AlignedTable.h" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a8e57df86086ebe37a6262170bf2b651a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * faiss::AlignedTable&lt; T, A &gt;::get</definition>
        <argsstring>()</argsstring>
        <name>get</name>
        <qualifiedname>faiss::AlignedTable::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="158" column="7" bodyfile="faiss/utils/AlignedTable.h" bodystart="158" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a47dcc7d9cdf1e102a46ea1b8f62672cc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T * faiss::AlignedTable&lt; T, A &gt;::get</definition>
        <argsstring>() const</argsstring>
        <name>get</name>
        <qualifiedname>faiss::AlignedTable::get</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="161" column="13" bodyfile="faiss/utils/AlignedTable.h" bodystart="161" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a3c7347b9eb1963900c93618cbfb3229e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T * faiss::AlignedTable&lt; T, A &gt;::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <qualifiedname>faiss::AlignedTable::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="164" column="7" bodyfile="faiss/utils/AlignedTable.h" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a6f2a331a02aaeda8e33d5c784eb9e137" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const T *</type>
        <definition>const T * faiss::AlignedTable&lt; T, A &gt;::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>faiss::AlignedTable::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="167" column="13" bodyfile="faiss/utils/AlignedTable.h" bodystart="167" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1ac0bdb3d5d82ff9b99f823878858f6edf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T &amp; faiss::AlignedTable&lt; T, A &gt;::operator[]</definition>
        <argsstring>(size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>faiss::AlignedTable::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="170" column="7" bodyfile="faiss/utils/AlignedTable.h" bodystart="170" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1AlignedTable_1a0dfea251fe4b4de54ea13e2f7a94bb1b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T</type>
        <definition>T faiss::AlignedTable&lt; T, A &gt;::operator[]</definition>
        <argsstring>(size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>faiss::AlignedTable::operator[]</qualifiedname>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/AlignedTable.h" line="173" column="7" bodyfile="faiss/utils/AlignedTable.h" bodystart="173" bodyend="175"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="2">
        <label>faiss::AlignedTableTightAlloc&lt; T, 32 &gt;</label>
        <link refid="structfaiss_1_1AlignedTableTightAlloc"/>
      </node>
      <node id="1">
        <label>faiss::AlignedTable&lt; T, A &gt;</label>
        <link refid="structfaiss_1_1AlignedTable"/>
        <childnode refid="2" relation="usage">
          <edgelabel>tab</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/utils/AlignedTable.h" line="117" column="1" bodyfile="faiss/utils/AlignedTable.h" bodystart="117" bodyend="178"/>
    <listofallmembers>
      <member refid="structfaiss_1_1AlignedTable_1a9df42e6d089361f2660ea055bea750af" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>AlignedTable</name></member>
      <member refid="structfaiss_1_1AlignedTable_1ab2d470841a876c31018c80de70f93032" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>AlignedTable</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a0fc44abce1af64d2f3ec818c4a162322" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>clear</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a3c7347b9eb1963900c93618cbfb3229e" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>data</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a6f2a331a02aaeda8e33d5c784eb9e137" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>data</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a8e57df86086ebe37a6262170bf2b651a" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>get</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a47dcc7d9cdf1e102a46ea1b8f62672cc" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>get</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a3108042082ac79a6b52fa66fc7f3dbf4" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>itemsize</name></member>
      <member refid="structfaiss_1_1AlignedTable_1ad1dc0523838baffe40691da967bc2323" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>nbytes</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a9faf9b717285bba439b0868722a34186" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>numel</name></member>
      <member refid="structfaiss_1_1AlignedTable_1ac0bdb3d5d82ff9b99f823878858f6edf" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>operator[]</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a0dfea251fe4b4de54ea13e2f7a94bb1b" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>operator[]</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a4ad035d22369fd0d96690cc3dd56b627" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>resize</name></member>
      <member refid="structfaiss_1_1AlignedTable_1ae0743223b636cb6797dc8c339754fffa" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>round_capacity</name></member>
      <member refid="structfaiss_1_1AlignedTable_1acc0383c46b807d32ed509e4f38e6f302" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>size</name></member>
      <member refid="structfaiss_1_1AlignedTable_1a6b71c9654cff088a16e5c24466379774" prot="public" virt="non-virtual"><scope>faiss::AlignedTable</scope><name>tab</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
