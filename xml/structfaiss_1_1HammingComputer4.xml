<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1HammingComputer4" kind="struct" language="C++" prot="public">
    <compoundname>faiss::HammingComputer4</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer4_1ad5c8ec402c03b960fc835722e1254cfa" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t faiss::HammingComputer4::a0</definition>
        <argsstring></argsstring>
        <name>a0</name>
        <qualifiedname>faiss::HammingComputer4::a0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="85" column="14" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="85" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a371053baf6ea27ab7948387f96ad911e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer4::HammingComputer4</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer4</name>
        <qualifiedname>faiss::HammingComputer4::HammingComputer4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="87" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a55b5dec647faca3fa97b0f96dd156267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer4::HammingComputer4</definition>
        <argsstring>(const uint8_t *a, int code_size)</argsstring>
        <name>HammingComputer4</name>
        <qualifiedname>faiss::HammingComputer4::HammingComputer4</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="89" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="89" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a727351f6b05e23f443ac5d0750cb9d93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer4::set</definition>
        <argsstring>(const uint8_t *a, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer4::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="93" column="10" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="93" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1aba11f9b8b74d30adf8884205e1e754ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer4::hamming</definition>
        <argsstring>(const uint8_t *b) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer4::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="98" column="16" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="98" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a371053baf6ea27ab7948387f96ad911e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer4::HammingComputer4</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer4</name>
        <qualifiedname>faiss::HammingComputer4::HammingComputer4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="92" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a55b5dec647faca3fa97b0f96dd156267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer4::HammingComputer4</definition>
        <argsstring>(const uint8_t *a, int code_size)</argsstring>
        <name>HammingComputer4</name>
        <qualifiedname>faiss::HammingComputer4::HammingComputer4</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="94" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="94" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a727351f6b05e23f443ac5d0750cb9d93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer4::set</definition>
        <argsstring>(const uint8_t *a, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer4::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="98" column="10" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1aba11f9b8b74d30adf8884205e1e754ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer4::hamming</definition>
        <argsstring>(const uint8_t *b) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer4::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="103" column="16" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="103" bodyend="105"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a371053baf6ea27ab7948387f96ad911e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer4::HammingComputer4</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer4</name>
        <qualifiedname>faiss::HammingComputer4::HammingComputer4</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="85" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a55b5dec647faca3fa97b0f96dd156267" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer4::HammingComputer4</definition>
        <argsstring>(const uint8_t *a, int code_size)</argsstring>
        <name>HammingComputer4</name>
        <qualifiedname>faiss::HammingComputer4::HammingComputer4</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="87" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="87" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1a727351f6b05e23f443ac5d0750cb9d93" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer4::set</definition>
        <argsstring>(const uint8_t *a, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer4::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="91" column="10" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="91" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1aba11f9b8b74d30adf8884205e1e754ac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer4::hamming</definition>
        <argsstring>(const uint8_t *b) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer4::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="96" column="16" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="96" bodyend="98"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1ad5857e33002d2907216f2f2d2f619ba4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer4::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer4::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="102" column="33" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="102" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1ad5857e33002d2907216f2f2d2f619ba4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer4::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer4::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="107" column="33" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="107" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer4_1ad5857e33002d2907216f2f2d2f619ba4" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer4::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer4::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="100" column="33" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="100" bodyend="102"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/utils/hamming_distance/avx2-inl.h" line="84" column="1" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="84" bodyend="105"/>
    <listofallmembers>
      <member refid="structfaiss_1_1HammingComputer4_1ad5c8ec402c03b960fc835722e1254cfa" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>a0</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1ad5857e33002d2907216f2f2d2f619ba4" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1ad5857e33002d2907216f2f2d2f619ba4" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1ad5857e33002d2907216f2f2d2f619ba4" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1aba11f9b8b74d30adf8884205e1e754ac" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1aba11f9b8b74d30adf8884205e1e754ac" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1aba11f9b8b74d30adf8884205e1e754ac" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a371053baf6ea27ab7948387f96ad911e" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>HammingComputer4</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a55b5dec647faca3fa97b0f96dd156267" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>HammingComputer4</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a371053baf6ea27ab7948387f96ad911e" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>HammingComputer4</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a55b5dec647faca3fa97b0f96dd156267" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>HammingComputer4</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a371053baf6ea27ab7948387f96ad911e" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>HammingComputer4</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a55b5dec647faca3fa97b0f96dd156267" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>HammingComputer4</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a727351f6b05e23f443ac5d0750cb9d93" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a727351f6b05e23f443ac5d0750cb9d93" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer4_1a727351f6b05e23f443ac5d0750cb9d93" prot="public" virt="non-virtual"><scope>faiss::HammingComputer4</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
