<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1gpu_1_1AllocRequest" kind="struct" language="C++" prot="public">
    <compoundname>faiss::gpu::AllocRequest</compoundname>
    <basecompoundref refid="structfaiss_1_1gpu_1_1AllocInfo" prot="public" virt="non-virtual">faiss::gpu::AllocInfo</basecompoundref>
    <includes refid="GpuResources_8h" local="no">GpuResources.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1AllocRequest_1a93563f81de28e3628f4b657536c95ceb" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::gpu::AllocRequest::size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <qualifiedname>faiss::gpu::AllocRequest::size</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The size in bytes of the allocation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="163" column="12" bodyfile="faiss/gpu/GpuResources.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1AllocInfo_1ae927d4e6e7b86c3541ffd0106f3b6d34" prot="public" static="no" mutable="no">
        <type>AllocType</type>
        <definition>AllocType faiss::gpu::AllocInfo::type</definition>
        <argsstring></argsstring>
        <name>type</name>
        <qualifiedname>faiss::gpu::AllocInfo::type</qualifiedname>
        <initializer>= AllocType::Other</initializer>
        <briefdescription>
<para>The internal category of the allocation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="116" column="15" bodyfile="faiss/gpu/GpuResources.h" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1AllocInfo_1aa1417147ce3c9b88c2600d7b2618f719" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::gpu::AllocInfo::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <qualifiedname>faiss::gpu::AllocInfo::device</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>The device on which the allocation is happening. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="119" column="9" bodyfile="faiss/gpu/GpuResources.h" bodystart="119" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1AllocInfo_1a5be5f0b54e3fe97ceca73df4799b87ee" prot="public" static="no" mutable="no">
        <type>MemorySpace</type>
        <definition>MemorySpace faiss::gpu::AllocInfo::space</definition>
        <argsstring></argsstring>
        <name>space</name>
        <qualifiedname>faiss::gpu::AllocInfo::space</qualifiedname>
        <initializer>= MemorySpace::Device</initializer>
        <briefdescription>
<para>The memory space of the allocation. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="122" column="17" bodyfile="faiss/gpu/GpuResources.h" bodystart="122" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1AllocInfo_1aa84beb46d87edf606343beefeb882bd0" prot="public" static="no" mutable="no">
        <type>cudaStream_t</type>
        <definition>cudaStream_t faiss::gpu::AllocInfo::stream</definition>
        <argsstring></argsstring>
        <name>stream</name>
        <qualifiedname>faiss::gpu::AllocInfo::stream</qualifiedname>
        <initializer>= nullptr</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The stream on which new work on the memory will be ordered (e.g., if a piece of memory cached and to be returned for this call was last used on stream 3 and a new memory request is for stream 4, the memory manager will synchronize stream 4 to wait for the completion of stream 3 via events or other stream synchronization.</para>
<para>The memory manager guarantees that the returned memory is free to use without data races on this stream specified. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="132" column="18" bodyfile="faiss/gpu/GpuResources.h" bodystart="132" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1gpu_1_1AllocRequest_1a0ecb0120bf0c4bcbcc79a916e82e6a0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::AllocRequest::AllocRequest</definition>
        <argsstring>()</argsstring>
        <name>AllocRequest</name>
        <qualifiedname>faiss::gpu::AllocRequest::AllocRequest</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="146" column="12" bodyfile="faiss/gpu/GpuResources.h" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1gpu_1_1AllocRequest_1aa65de465c83315a5702844834174a0d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::AllocRequest::AllocRequest</definition>
        <argsstring>(const AllocInfo &amp;info, size_t sz)</argsstring>
        <name>AllocRequest</name>
        <qualifiedname>faiss::gpu::AllocRequest::AllocRequest</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1gpu_1_1AllocInfo" kindref="compound">AllocInfo</ref> &amp;</type>
          <declname>info</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="148" column="12" bodyfile="faiss/gpu/GpuResources.h" bodystart="148" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1gpu_1_1AllocRequest_1a498bb2e3d03902fe07db036d3287b355" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::gpu::AllocRequest::AllocRequest</definition>
        <argsstring>(AllocType at, int dev, MemorySpace sp, cudaStream_t st, size_t sz)</argsstring>
        <name>AllocRequest</name>
        <qualifiedname>faiss::gpu::AllocRequest::AllocRequest</qualifiedname>
        <param>
          <type>AllocType</type>
          <declname>at</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dev</declname>
        </param>
        <param>
          <type>MemorySpace</type>
          <declname>sp</declname>
        </param>
        <param>
          <type>cudaStream_t</type>
          <declname>st</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>sz</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="151" column="12" bodyfile="faiss/gpu/GpuResources.h" bodystart="151" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1gpu_1_1AllocRequest_1a9089e476b1b39c6fdb5d262e511ebef5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::gpu::AllocRequest::toString</definition>
        <argsstring>() const</argsstring>
        <name>toString</name>
        <qualifiedname>faiss::gpu::AllocRequest::toString</qualifiedname>
        <briefdescription>
<para>Returns a string representation of this request. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuResources.h" line="160" column="17"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Information on what/where an allocation is, along with how big it should be. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>faiss::gpu::AllocInfo</label>
        <link refid="structfaiss_1_1gpu_1_1AllocInfo"/>
      </node>
      <node id="1">
        <label>faiss::gpu::AllocRequest</label>
        <link refid="structfaiss_1_1gpu_1_1AllocRequest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>faiss::gpu::AllocInfo</label>
        <link refid="structfaiss_1_1gpu_1_1AllocInfo"/>
      </node>
      <node id="1">
        <label>faiss::gpu::AllocRequest</label>
        <link refid="structfaiss_1_1gpu_1_1AllocRequest"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/gpu/GpuResources.h" line="145" column="1" bodyfile="faiss/gpu/GpuResources.h" bodystart="145" bodyend="168"/>
    <listofallmembers>
      <member refid="structfaiss_1_1gpu_1_1AllocInfo_1a9f0952aebd52122e8c9a304653a6c321" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>AllocInfo</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocInfo_1a37c06c3cfa2bd56b6f93a4e7d732ace5" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>AllocInfo</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocRequest_1a0ecb0120bf0c4bcbcc79a916e82e6a0f" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>AllocRequest</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocRequest_1aa65de465c83315a5702844834174a0d2" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>AllocRequest</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocRequest_1a498bb2e3d03902fe07db036d3287b355" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>AllocRequest</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocInfo_1aa1417147ce3c9b88c2600d7b2618f719" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>device</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocRequest_1a93563f81de28e3628f4b657536c95ceb" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>size</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocInfo_1a5be5f0b54e3fe97ceca73df4799b87ee" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>space</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocInfo_1aa84beb46d87edf606343beefeb882bd0" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>stream</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocRequest_1a9089e476b1b39c6fdb5d262e511ebef5" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>toString</name></member>
      <member refid="structfaiss_1_1gpu_1_1AllocInfo_1ae927d4e6e7b86c3541ffd0106f3b6d34" prot="public" virt="non-virtual"><scope>faiss::gpu::AllocRequest</scope><name>type</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
