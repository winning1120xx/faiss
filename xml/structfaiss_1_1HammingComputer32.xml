<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1HammingComputer32" kind="struct" language="C++" prot="public">
    <compoundname>faiss::HammingComputer32</compoundname>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer32_1a9e410d8583e796b7d4eff2b88c0d9c30" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer32::a0</definition>
        <argsstring></argsstring>
        <name>a0</name>
        <qualifiedname>faiss::HammingComputer32::a0</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="188" column="14" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer32_1ac3467554a7c3fd0a102bd811e915aba0" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer32::a1</definition>
        <argsstring></argsstring>
        <name>a1</name>
        <qualifiedname>faiss::HammingComputer32::a1</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="188" column="17" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer32_1a8150e86907f56a477c0e0fd46cb16dd8" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer32::a2</definition>
        <argsstring></argsstring>
        <name>a2</name>
        <qualifiedname>faiss::HammingComputer32::a2</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="188" column="20" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1HammingComputer32_1a95743dcd218c0d1ee53b83efe7a626ef" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t faiss::HammingComputer32::a3</definition>
        <argsstring></argsstring>
        <name>a3</name>
        <qualifiedname>faiss::HammingComputer32::a3</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="188" column="23" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="188" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1ad2f9cd4919916cbc11482e46c5f49ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer32::HammingComputer32</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer32</name>
        <qualifiedname>faiss::HammingComputer32::HammingComputer32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="190" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="190" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a9019f812a483c0c7efe8dedb5c7c8352" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer32::HammingComputer32</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer32</name>
        <qualifiedname>faiss::HammingComputer32::HammingComputer32</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="192" column="5" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="192" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a5e121e89d304e9ba6601f8ef4b86c38c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer32::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer32::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="196" column="10" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="196" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a0d92afe4a71725e8dd912ad1bf7fa20f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer32::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer32::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="205" column="16" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1ad2f9cd4919916cbc11482e46c5f49ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer32::HammingComputer32</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer32</name>
        <qualifiedname>faiss::HammingComputer32::HammingComputer32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="195" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a9019f812a483c0c7efe8dedb5c7c8352" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer32::HammingComputer32</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer32</name>
        <qualifiedname>faiss::HammingComputer32::HammingComputer32</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="197" column="5" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="197" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a5e121e89d304e9ba6601f8ef4b86c38c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer32::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer32::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="201" column="10" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="201" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a0d92afe4a71725e8dd912ad1bf7fa20f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer32::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer32::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="210" column="16" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1ad2f9cd4919916cbc11482e46c5f49ddb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer32::HammingComputer32</definition>
        <argsstring>()</argsstring>
        <name>HammingComputer32</name>
        <qualifiedname>faiss::HammingComputer32::HammingComputer32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="191" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="191" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a9019f812a483c0c7efe8dedb5c7c8352" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::HammingComputer32::HammingComputer32</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>HammingComputer32</name>
        <qualifiedname>faiss::HammingComputer32::HammingComputer32</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="193" column="5" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="193" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a5e121e89d304e9ba6601f8ef4b86c38c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::HammingComputer32::set</definition>
        <argsstring>(const uint8_t *a8, int code_size)</argsstring>
        <name>set</name>
        <qualifiedname>faiss::HammingComputer32::set</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>a8</declname>
        </param>
        <param>
          <type>int</type>
          <declname>code_size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="197" column="10" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="197" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a0d92afe4a71725e8dd912ad1bf7fa20f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int faiss::HammingComputer32::hamming</definition>
        <argsstring>(const uint8_t *b8) const</argsstring>
        <name>hamming</name>
        <qualifiedname>faiss::HammingComputer32::hamming</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>b8</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="206" column="16" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="206" bodyend="210"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a1e3373d91109d5506ae84db7b21161ae" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer32::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer32::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx2-inl.h" line="211" column="33" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="211" bodyend="213"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a1e3373d91109d5506ae84db7b21161ae" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer32::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer32::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/avx512-inl.h" line="216" column="33" bodyfile="faiss/utils/hamming_distance/avx512-inl.h" bodystart="216" bodyend="218"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1HammingComputer32_1a1e3373d91109d5506ae84db7b21161ae" prot="public" static="yes" constexpr="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr int</type>
        <definition>static constexpr int faiss::HammingComputer32::get_code_size</definition>
        <argsstring>()</argsstring>
        <name>get_code_size</name>
        <qualifiedname>faiss::HammingComputer32::get_code_size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/hamming_distance/generic-inl.h" line="212" column="33" bodyfile="faiss/utils/hamming_distance/generic-inl.h" bodystart="212" bodyend="214"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="faiss/utils/hamming_distance/avx2-inl.h" line="187" column="1" bodyfile="faiss/utils/hamming_distance/avx2-inl.h" bodystart="187" bodyend="214"/>
    <listofallmembers>
      <member refid="structfaiss_1_1HammingComputer32_1a9e410d8583e796b7d4eff2b88c0d9c30" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>a0</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1ac3467554a7c3fd0a102bd811e915aba0" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>a1</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a8150e86907f56a477c0e0fd46cb16dd8" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>a2</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a95743dcd218c0d1ee53b83efe7a626ef" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>a3</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a1e3373d91109d5506ae84db7b21161ae" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a1e3373d91109d5506ae84db7b21161ae" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a1e3373d91109d5506ae84db7b21161ae" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>get_code_size</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a0d92afe4a71725e8dd912ad1bf7fa20f" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a0d92afe4a71725e8dd912ad1bf7fa20f" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a0d92afe4a71725e8dd912ad1bf7fa20f" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>hamming</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1ad2f9cd4919916cbc11482e46c5f49ddb" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>HammingComputer32</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a9019f812a483c0c7efe8dedb5c7c8352" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>HammingComputer32</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1ad2f9cd4919916cbc11482e46c5f49ddb" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>HammingComputer32</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a9019f812a483c0c7efe8dedb5c7c8352" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>HammingComputer32</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1ad2f9cd4919916cbc11482e46c5f49ddb" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>HammingComputer32</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a9019f812a483c0c7efe8dedb5c7c8352" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>HammingComputer32</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a5e121e89d304e9ba6601f8ef4b86c38c" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a5e121e89d304e9ba6601f8ef4b86c38c" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>set</name></member>
      <member refid="structfaiss_1_1HammingComputer32_1a5e121e89d304e9ba6601f8ef4b86c38c" prot="public" virt="non-virtual"><scope>faiss::HammingComputer32</scope><name>set</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
