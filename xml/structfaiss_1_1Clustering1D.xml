<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1Clustering1D" kind="struct" language="C++" prot="public">
    <compoundname>faiss::Clustering1D</compoundname>
    <basecompoundref refid="structfaiss_1_1Clustering" prot="public" virt="non-virtual">faiss::Clustering</basecompoundref>
    <includes refid="Clustering_8h" local="no">Clustering.h</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1Clustering1D_1a86913acc3c6a5f1059afd954508f7a99" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::Clustering1D::Clustering1D</definition>
        <argsstring>(int k)</argsstring>
        <name>Clustering1D</name>
        <qualifiedname>faiss::Clustering1D::Clustering1D</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="137" column="14"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Clustering1D_1a8d84a1ebd8e3da9d45f539103ab30559" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::Clustering1D::Clustering1D</definition>
        <argsstring>(int k, const ClusteringParameters &amp;cp)</argsstring>
        <name>Clustering1D</name>
        <qualifiedname>faiss::Clustering1D::Clustering1D</qualifiedname>
        <param>
          <type>int</type>
          <declname>k</declname>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1ClusteringParameters" kindref="compound">ClusteringParameters</ref> &amp;</type>
          <declname>cp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="139" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Clustering1D_1a310ce0a338a7347e7ee5cef91993800e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::Clustering1D::train_exact</definition>
        <argsstring>(idx_t n, const float *x)</argsstring>
        <name>train_exact</name>
        <qualifiedname>faiss::Clustering1D::train_exact</qualifiedname>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="141" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Clustering1D_1ab595b531844d7e70b2b45c03394622bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type></type>
        <definition>virtual faiss::Clustering1D::~Clustering1D</definition>
        <argsstring>()</argsstring>
        <name>~Clustering1D</name>
        <qualifiedname>faiss::Clustering1D::~Clustering1D</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="143" column="13" bodyfile="faiss/Clustering.h" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Clustering_1a097ae80bb9d39da6657f35bd00da39f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void faiss::Clustering::train</definition>
        <argsstring>(idx_t n, const float *x, faiss::Index &amp;index, const float *x_weights=nullptr)</argsstring>
        <name>train</name>
        <qualifiedname>faiss::Clustering::train</qualifiedname>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>n</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="structfaiss_1_1Index" kindref="compound">faiss::Index</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>x_weights</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>run k-means training</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>training vectors, size n * d </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>index used for assignment </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x_weights</parametername>
</parameternamelist>
<parameterdescription>
<para>weight associated to each vector: NULL or size n </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="104" column="18"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Clustering_1ad6ee36738660eaab7e11b3b5ee278912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::Clustering::train_encoded</definition>
        <argsstring>(idx_t nx, const uint8_t *x_in, const Index *codec, Index &amp;index, const float *weights=nullptr)</argsstring>
        <name>train_encoded</name>
        <qualifiedname>faiss::Clustering::train_encoded</qualifiedname>
        <param>
          <type><ref refid="namespacefaiss_1ad63e84aa82f5bb0405ed924d58b20e2e" kindref="member">idx_t</ref></type>
          <declname>nx</declname>
        </param>
        <param>
          <type>const uint8_t *</type>
          <declname>x_in</declname>
        </param>
        <param>
          <type>const <ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> *</type>
          <declname>codec</declname>
        </param>
        <param>
          <type><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> &amp;</type>
          <declname>index</declname>
        </param>
        <param>
          <type>const float *</type>
          <declname>weights</declname>
          <defval>nullptr</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>run with encoded vectors</para>
<para>win addition to <ref refid="structfaiss_1_1Clustering_1a097ae80bb9d39da6657f35bd00da39f2" kindref="member">train()</ref>&apos;s parameters takes a codec as parameter to decode the input vectors.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>codec</parametername>
</parameternamelist>
<parameterdescription>
<para>codec used to decode the vectors (nullptr = vectors are in fact floats) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="118" column="10"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1Clustering_1adcb47440a792267bb9218c10378cf1a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::Clustering::post_process_centroids</definition>
        <argsstring>()</argsstring>
        <name>post_process_centroids</name>
        <qualifiedname>faiss::Clustering::post_process_centroids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Post-process the centroids after each centroid update. includes optional L2 normalization and nearest integer rounding </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="127" column="10"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1Clustering_1afbf6efacae54c58586b75ed790facd74" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::Clustering::d</definition>
        <argsstring></argsstring>
        <name>d</name>
        <qualifiedname>faiss::Clustering::d</qualifiedname>
        <briefdescription>
<para>dimension of the vectors </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="83" column="12" bodyfile="faiss/Clustering.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Clustering_1a87581785d9516c683bbc7c9392bfa993" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::Clustering::k</definition>
        <argsstring></argsstring>
        <name>k</name>
        <qualifiedname>faiss::Clustering::k</qualifiedname>
        <briefdescription>
<para>nb of centroids </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="84" column="12" bodyfile="faiss/Clustering.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Clustering_1a64c5ec0b4a7967d8be2872974b455ff1" prot="public" static="no" mutable="no">
        <type>std::vector&lt; float &gt;</type>
        <definition>std::vector&lt;float&gt; faiss::Clustering::centroids</definition>
        <argsstring></argsstring>
        <name>centroids</name>
        <qualifiedname>faiss::Clustering::centroids</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>centroids (k * d) if centroids are set on input to train, they will be used as initialization </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="90" column="17" bodyfile="faiss/Clustering.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1Clustering_1a2ea2382ac486aa661ee0338cfb836a02" prot="public" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="structfaiss_1_1ClusteringIterationStats" kindref="compound">ClusteringIterationStats</ref> &gt;</type>
        <definition>std::vector&lt;ClusteringIterationStats&gt; faiss::Clustering::iteration_stats</definition>
        <argsstring></argsstring>
        <name>iteration_stats</name>
        <qualifiedname>faiss::Clustering::iteration_stats</qualifiedname>
        <briefdescription>
<para>stats at every iteration of clustering </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="93" column="17" bodyfile="faiss/Clustering.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a5c7c6f05c75e1668befdb3be148fd5f9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ClusteringParameters::niter</definition>
        <argsstring></argsstring>
        <name>niter</name>
        <qualifiedname>faiss::ClusteringParameters::niter</qualifiedname>
        <initializer>= 25</initializer>
        <briefdescription>
<para>number of clustering iterations </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="23" column="9" bodyfile="faiss/Clustering.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a11a049c40c376c57ac6cc3b8d5d1d58b" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ClusteringParameters::nredo</definition>
        <argsstring></argsstring>
        <name>nredo</name>
        <qualifiedname>faiss::ClusteringParameters::nredo</qualifiedname>
        <initializer>= 1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>redo clustering this many times and keep the clusters with the best objective </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="26" column="9" bodyfile="faiss/Clustering.h" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a932139ba9b62b37d9121b4c6a4518b52" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::ClusteringParameters::verbose</definition>
        <argsstring></argsstring>
        <name>verbose</name>
        <qualifiedname>faiss::ClusteringParameters::verbose</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="28" column="10" bodyfile="faiss/Clustering.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1ad997fb511f574f7ddc69938c21612f8d" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::ClusteringParameters::spherical</definition>
        <argsstring></argsstring>
        <name>spherical</name>
        <qualifiedname>faiss::ClusteringParameters::spherical</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>whether to normalize centroids after each iteration (useful for inner product clustering) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="31" column="10" bodyfile="faiss/Clustering.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1ae01573d8d4cbff7c3d6eaded883537a4" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::ClusteringParameters::int_centroids</definition>
        <argsstring></argsstring>
        <name>int_centroids</name>
        <qualifiedname>faiss::ClusteringParameters::int_centroids</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>round centroids coordinates to integer after each iteration? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="33" column="10" bodyfile="faiss/Clustering.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a27d6192097920fa981cff0acedfaac91" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::ClusteringParameters::update_index</definition>
        <argsstring></argsstring>
        <name>update_index</name>
        <qualifiedname>faiss::ClusteringParameters::update_index</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>re-train index after each iteration? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="35" column="10" bodyfile="faiss/Clustering.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1ad142063e035f2a0414233f9711e16215" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::ClusteringParameters::frozen_centroids</definition>
        <argsstring></argsstring>
        <name>frozen_centroids</name>
        <qualifiedname>faiss::ClusteringParameters::frozen_centroids</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use the subset of centroids provided as input and do not change them during iterations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="39" column="10" bodyfile="faiss/Clustering.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a5af907901147a9b1e748b13305839924" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ClusteringParameters::min_points_per_centroid</definition>
        <argsstring></argsstring>
        <name>min_points_per_centroid</name>
        <qualifiedname>faiss::ClusteringParameters::min_points_per_centroid</qualifiedname>
        <initializer>= 39</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>If fewer than this number of training vectors per centroid are provided, writes a warning. Note that fewer than 1 point per centroid raises an exception. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="43" column="9" bodyfile="faiss/Clustering.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a993e0a035248faad6e292a5ef9af1953" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ClusteringParameters::max_points_per_centroid</definition>
        <argsstring></argsstring>
        <name>max_points_per_centroid</name>
        <qualifiedname>faiss::ClusteringParameters::max_points_per_centroid</qualifiedname>
        <initializer>= 256</initializer>
        <briefdescription>
<para>to limit size of dataset, otherwise the training set is subsampled </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="45" column="9" bodyfile="faiss/Clustering.h" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a509c65e2ebe6ecabebd163ecb03c5579" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::ClusteringParameters::seed</definition>
        <argsstring></argsstring>
        <name>seed</name>
        <qualifiedname>faiss::ClusteringParameters::seed</qualifiedname>
        <initializer>= 1234</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>seed for the random number generator. negative values lead to seeding an internal rng with std::high_resolution_clock. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="49" column="9" bodyfile="faiss/Clustering.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a46448d2ab0341faedc18a613264ad44f" prot="public" static="no" mutable="no">
        <type>size_t</type>
        <definition>size_t faiss::ClusteringParameters::decode_block_size</definition>
        <argsstring></argsstring>
        <name>decode_block_size</name>
        <qualifiedname>faiss::ClusteringParameters::decode_block_size</qualifiedname>
        <initializer>= 32768</initializer>
        <briefdescription>
<para>when the training set is encoded, batch size of the codec decoder </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="52" column="12" bodyfile="faiss/Clustering.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1a469bb5268d7ca59704f1c1cc839ce73a" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::ClusteringParameters::check_input_data_for_NaNs</definition>
        <argsstring></argsstring>
        <name>check_input_data_for_NaNs</name>
        <qualifiedname>faiss::ClusteringParameters::check_input_data_for_NaNs</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
<para>whether to check for NaNs in an input data </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="55" column="10" bodyfile="faiss/Clustering.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1ClusteringParameters_1aff5ba035913f4d228329302b56971089" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::ClusteringParameters::use_faster_subsampling</definition>
        <argsstring></argsstring>
        <name>use_faster_subsampling</name>
        <qualifiedname>faiss::ClusteringParameters::use_faster_subsampling</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Whether to use splitmix64-based random number generator for subsampling, which is faster, but may pick duplicate points. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/Clustering.h" line="59" column="10" bodyfile="faiss/Clustering.h" bodystart="59" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Exact 1D clustering algorithm</para>
<para>Since it does not use an index, it does not overload the <ref refid="structfaiss_1_1Clustering_1a097ae80bb9d39da6657f35bd00da39f2" kindref="member">train()</ref> function </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>faiss::Clustering</label>
        <link refid="structfaiss_1_1Clustering"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>faiss::Clustering1D</label>
        <link refid="structfaiss_1_1Clustering1D"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>faiss::ClusteringParameters</label>
        <link refid="structfaiss_1_1ClusteringParameters"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>faiss::Clustering</label>
        <link refid="structfaiss_1_1Clustering"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>faiss::Clustering1D</label>
        <link refid="structfaiss_1_1Clustering1D"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>faiss::ClusteringParameters</label>
        <link refid="structfaiss_1_1ClusteringParameters"/>
      </node>
    </collaborationgraph>
    <location file="faiss/Clustering.h" line="136" column="1" bodyfile="faiss/Clustering.h" bodystart="136" bodyend="144"/>
    <listofallmembers>
      <member refid="structfaiss_1_1Clustering_1a64c5ec0b4a7967d8be2872974b455ff1" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>centroids</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a469bb5268d7ca59704f1c1cc839ce73a" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>check_input_data_for_NaNs</name></member>
      <member refid="structfaiss_1_1Clustering_1a2fa90a2681dc42faaf2435e63a5ae9b4" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>Clustering</name></member>
      <member refid="structfaiss_1_1Clustering_1afd25cc6832b576ce4d0d7430e8ee3bff" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>Clustering</name></member>
      <member refid="structfaiss_1_1Clustering1D_1a86913acc3c6a5f1059afd954508f7a99" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>Clustering1D</name></member>
      <member refid="structfaiss_1_1Clustering1D_1a8d84a1ebd8e3da9d45f539103ab30559" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>Clustering1D</name></member>
      <member refid="structfaiss_1_1Clustering_1afbf6efacae54c58586b75ed790facd74" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>d</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a46448d2ab0341faedc18a613264ad44f" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>decode_block_size</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1ad142063e035f2a0414233f9711e16215" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>frozen_centroids</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1ae01573d8d4cbff7c3d6eaded883537a4" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>int_centroids</name></member>
      <member refid="structfaiss_1_1Clustering_1a2ea2382ac486aa661ee0338cfb836a02" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>iteration_stats</name></member>
      <member refid="structfaiss_1_1Clustering_1a87581785d9516c683bbc7c9392bfa993" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>k</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a993e0a035248faad6e292a5ef9af1953" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>max_points_per_centroid</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a5af907901147a9b1e748b13305839924" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>min_points_per_centroid</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a5c7c6f05c75e1668befdb3be148fd5f9" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>niter</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a11a049c40c376c57ac6cc3b8d5d1d58b" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>nredo</name></member>
      <member refid="structfaiss_1_1Clustering_1adcb47440a792267bb9218c10378cf1a8" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>post_process_centroids</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a509c65e2ebe6ecabebd163ecb03c5579" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>seed</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1ad997fb511f574f7ddc69938c21612f8d" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>spherical</name></member>
      <member refid="structfaiss_1_1Clustering_1a097ae80bb9d39da6657f35bd00da39f2" prot="public" virt="virtual"><scope>faiss::Clustering1D</scope><name>train</name></member>
      <member refid="structfaiss_1_1Clustering_1ad6ee36738660eaab7e11b3b5ee278912" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>train_encoded</name></member>
      <member refid="structfaiss_1_1Clustering1D_1a310ce0a338a7347e7ee5cef91993800e" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>train_exact</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a27d6192097920fa981cff0acedfaac91" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>update_index</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1aff5ba035913f4d228329302b56971089" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>use_faster_subsampling</name></member>
      <member refid="structfaiss_1_1ClusteringParameters_1a932139ba9b62b37d9121b4c6a4518b52" prot="public" virt="non-virtual"><scope>faiss::Clustering1D</scope><name>verbose</name></member>
      <member refid="structfaiss_1_1Clustering_1a17403e70a0daaa43c67ac3ea098ce5b3" prot="public" virt="virtual"><scope>faiss::Clustering1D</scope><name>~Clustering</name></member>
      <member refid="structfaiss_1_1Clustering1D_1ab595b531844d7e70b2b45c03394622bf" prot="public" virt="virtual"><scope>faiss::Clustering1D</scope><name>~Clustering1D</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
