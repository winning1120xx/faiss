<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1simd8uint32" kind="struct" language="C++" prot="public">
    <compoundname>faiss::simd8uint32</compoundname>
    <basecompoundref refid="structfaiss_1_1simd256bit" prot="public" virt="non-virtual">faiss::simd256bit</basecompoundref>
    <basecompoundref refid="structfaiss_1_1simd256bit" prot="public" virt="non-virtual">faiss::simd256bit</basecompoundref>
    <basecompoundref refid="structfaiss_1_1simd256bit" prot="public" virt="non-virtual">faiss::simd256bit</basecompoundref>
    <includes refid="simdlib__avx2_8h" local="no">simdlib_avx2.h</includes>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1simd8uint32_1ac48e258881fce8283f47a1f112d123ff" prot="public" static="no" mutable="no">
        <type>uint32x4x2_t</type>
        <definition>uint32x4x2_t faiss::simd8uint32::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <qualifiedname>faiss::simd8uint32::data</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="913" column="18" bodyfile="faiss/utils/simdlib_neon.h" bodystart="913" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a0061ab97fb706619dbb1db084d89c57e" prot="public" static="no" mutable="no">
        <type>__m256i</type>
        <definition>__m256i faiss::simd256bit::i</definition>
        <argsstring></argsstring>
        <name>i</name>
        <qualifiedname>faiss::simd256bit::i</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="30" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a745d258c489056abcb18de77d04dc7da" prot="public" static="no" mutable="no">
        <type>__m256</type>
        <definition>__m256 faiss::simd256bit::f</definition>
        <argsstring></argsstring>
        <name>f</name>
        <qualifiedname>faiss::simd256bit::f</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="31" column="16" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a1142cc58e944c92c58668dffee8d0aeb" prot="public" static="no" mutable="no">
        <type>union <ref refid="structfaiss_1_1simd256bit" kindref="compound">faiss::simd256bit</ref></type>
        <definition>union faiss::simd256bit faiss::simd256bit</definition>
        <argsstring></argsstring>
        <name></name>
        <qualifiedname>faiss::simd256bit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="32" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1acb1ccdc5222ee156bacdc10a5f94d736" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t faiss::simd256bit::u8[32]</definition>
        <argsstring>[32]</argsstring>
        <name>u8</name>
        <qualifiedname>faiss::simd256bit::u8</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="19" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1ae1a0c5c5a086370f21a346bd20e2b378" prot="public" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t faiss::simd256bit::u16[16]</definition>
        <argsstring>[16]</argsstring>
        <name>u16</name>
        <qualifiedname>faiss::simd256bit::u16</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="20" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1aa68a3cf73ecbc73107a720e8c3f1d25c" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t faiss::simd256bit::u32[8]</definition>
        <argsstring>[8]</argsstring>
        <name>u32</name>
        <qualifiedname>faiss::simd256bit::u32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="21" column="18" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a73b7c0cc868d44cc02c58688977ba4a7" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float faiss::simd256bit::f32[8]</definition>
        <argsstring>[8]</argsstring>
        <name>f32</name>
        <qualifiedname>faiss::simd256bit::f32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="22" column="15" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a7c8581ec29fc18c1d165dbb76b050732" prot="public" static="no" mutable="no">
        <type>union <ref refid="structfaiss_1_1simd256bit" kindref="compound">faiss::simd256bit</ref></type>
        <definition>union faiss::simd256bit faiss::simd256bit</definition>
        <argsstring></argsstring>
        <name></name>
        <qualifiedname>faiss::simd256bit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="23" column="5"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1simd256bit_1a915f57d853b8aa23b7a57da1e32c0b6a" prot="public" static="no" mutable="no">
        <type>union <ref refid="structfaiss_1_1simd256bit" kindref="compound">faiss::simd256bit</ref></type>
        <definition>union faiss::simd256bit faiss::simd256bit</definition>
        <argsstring></argsstring>
        <name></name>
        <qualifiedname>faiss::simd256bit</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="23" column="5"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a89da3bccd3b703777fe4127f5fc764a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>()</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="506" column="5" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="506" bodyend="506"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1aa5492eb7ac37ae575678d0ef892d22b7" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(__m256i i)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>__m256i</type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="508" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="508" bodyend="508"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="510" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="510" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a869e7afbc9c6551de07262f06a3a4d6c" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(simd256bit x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref></type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="512" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="512" bodyend="512"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a0086499229d095b39be4c682881a1835" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const uint8_t *x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="514" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="514" bodyend="514"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3, uint32_t u4, uint32_t u5, uint32_t u6, uint32_t u7)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>u0</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u3</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u4</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u5</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u6</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="516" column="14" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="516" bodyend="525"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator+</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>faiss::simd8uint32::operator+</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="527" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="527" bodyend="529"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator-</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>faiss::simd8uint32::operator-</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="531" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="531" bodyend="533"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
        <definition>simd8uint32 &amp; faiss::simd8uint32::operator+=</definition>
        <argsstring>(const simd8uint32 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>faiss::simd8uint32::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="535" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="535" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1af2e3b1671b5bccbe8a97f6b93b939166" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8uint32::operator==</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>faiss::simd8uint32::operator==</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="540" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="540" bodyend="544"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9c44b96149faa651a584c643ebb68c38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8uint32::operator!=</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>faiss::simd8uint32::operator!=</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="546" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="546" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::elements_to_string</definition>
        <argsstring>(const char *fmt) const</argsstring>
        <name>elements_to_string</name>
        <qualifiedname>faiss::simd8uint32::elements_to_string</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="550" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="550" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <qualifiedname>faiss::simd8uint32::hex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="563" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="563" bodyend="565"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::dec</definition>
        <argsstring>() const</argsstring>
        <name>dec</name>
        <qualifiedname>faiss::simd8uint32::dec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="567" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="567" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::set1</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>set1</name>
        <qualifiedname>faiss::simd8uint32::set1</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="571" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="571" bodyend="573"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::unzip</definition>
        <argsstring>() const</argsstring>
        <name>unzip</name>
        <qualifiedname>faiss::simd8uint32::unzip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="575" column="17" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="575" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a89da3bccd3b703777fe4127f5fc764a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>()</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="611" column="5" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="611" bodyend="611"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="613" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="613" bodyend="615"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9583099d313bf8ecdbfcc7c6486cc002" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const simd256bit &amp;x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="617" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="617" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1aad9c42ae0f659b87d99ec395e925bf23" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const uint32_t *x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const uint32_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="619" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="619" bodyend="619"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3, uint32_t u4, uint32_t u5, uint32_t u6, uint32_t u7)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>u0</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u3</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u4</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u5</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u6</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="621" column="14" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="621" bodyend="638"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator+</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>faiss::simd8uint32::operator+</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="640" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="640" bodyend="646"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator-</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>faiss::simd8uint32::operator-</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="648" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="648" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
        <definition>simd8uint32 &amp; faiss::simd8uint32::operator+=</definition>
        <argsstring>(const simd8uint32 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>faiss::simd8uint32::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="656" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="656" bodyend="661"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1af2e3b1671b5bccbe8a97f6b93b939166" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8uint32::operator==</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>faiss::simd8uint32::operator==</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="663" column="10" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="663" bodyend="671"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9c44b96149faa651a584c643ebb68c38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8uint32::operator!=</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>faiss::simd8uint32::operator!=</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="673" column="10" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="673" bodyend="675"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::elements_to_string</definition>
        <argsstring>(const char *fmt) const</argsstring>
        <name>elements_to_string</name>
        <qualifiedname>faiss::simd8uint32::elements_to_string</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="677" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="677" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <qualifiedname>faiss::simd8uint32::hex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="687" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="687" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::dec</definition>
        <argsstring>() const</argsstring>
        <name>dec</name>
        <qualifiedname>faiss::simd8uint32::dec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="691" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="691" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::set1</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>set1</name>
        <qualifiedname>faiss::simd8uint32::set1</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="695" column="10" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="695" bodyend="699"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::unzip</definition>
        <argsstring>() const</argsstring>
        <name>unzip</name>
        <qualifiedname>faiss::simd8uint32::unzip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_emulated.h" line="701" column="17" bodyfile="faiss/utils/simdlib_emulated.h" bodystart="701" bodyend="705"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a91007d2e6b4014a04af520fb2613563b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>()=default</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="915" column="5"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="917" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="917" bodyend="917"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a4afdab340dd761c338ae8ba062eea447" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const uint32x4x2_t &amp;v)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const uint32x4x2_t &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="919" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="919" bodyend="919"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1ad3a20f7237b6cbd6539335f864ff604b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename std::enable_if&lt; <ref refid="structfaiss_1_1detail_1_1simdlib_1_1is__simd256bit" kindref="compound">detail::simdlib::is_simd256bit</ref>&lt; T &gt;::value, std::nullptr_t &gt;::type</type>
            <defval>nullptr</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const T &amp;x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const T &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="926" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="926" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a0086499229d095b39be4c682881a1835" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const uint8_t *x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const uint8_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="929" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="929" bodyend="929"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3, uint32_t u4, uint32_t u5, uint32_t u6, uint32_t u7)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>u0</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u3</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u4</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u5</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u6</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="931" column="14" bodyfile="faiss/utils/simdlib_neon.h" bodystart="931" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator+</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>faiss::simd8uint32::operator+</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="945" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="945" bodyend="948"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator-</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>faiss::simd8uint32::operator-</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="950" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="950" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
        <definition>simd8uint32 &amp; faiss::simd8uint32::operator+=</definition>
        <argsstring>(const simd8uint32 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>faiss::simd8uint32::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="955" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="955" bodyend="959"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a8a285fa0c882d4ae0c0a9924aeab8da3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator==</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>faiss::simd8uint32::operator==</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="961" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="961" bodyend="964"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a5b27538f9fba7013969b566148164319" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator~</definition>
        <argsstring>() const</argsstring>
        <name>operator~</name>
        <qualifiedname>faiss::simd8uint32::operator~</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="966" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="966" bodyend="969"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a8fc08be86df0d86f5f533135e932040e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator!=</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>faiss::simd8uint32::operator!=</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="971" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="971" bodyend="973"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a3786186a2d9ab71fc35c62c3ab0dbb93" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool faiss::simd8uint32::is_same_as</definition>
        <argsstring>(T other) const</argsstring>
        <name>is_same_as</name>
        <qualifiedname>faiss::simd8uint32::is_same_as</qualifiedname>
        <param>
          <type>T</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="977" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="977" bodyend="983"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1ac7c7f6d24de40a0775ec4eabf105a87f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::clear</definition>
        <argsstring>()</argsstring>
        <name>clear</name>
        <qualifiedname>faiss::simd8uint32::clear</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="985" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="985" bodyend="988"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1ad9640b0b2bf719d75099690cac845f39" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::storeu</definition>
        <argsstring>(uint32_t *ptr) const</argsstring>
        <name>storeu</name>
        <qualifiedname>faiss::simd8uint32::storeu</qualifiedname>
        <param>
          <type>uint32_t *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="990" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="990" bodyend="993"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a522eb3e5f8f2b08a4fa60d0a166a7b66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::loadu</definition>
        <argsstring>(const uint32_t *ptr)</argsstring>
        <name>loadu</name>
        <qualifiedname>faiss::simd8uint32::loadu</qualifiedname>
        <param>
          <type>const uint32_t *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="995" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="995" bodyend="998"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a2a0698c637a32a56f2bf61922a522fa3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::store</definition>
        <argsstring>(uint32_t *ptr) const</argsstring>
        <name>store</name>
        <qualifiedname>faiss::simd8uint32::store</qualifiedname>
        <param>
          <type>uint32_t *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1000" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1000" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a106f0835ce8804af4e71eb8f65b3860c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::bin</definition>
        <argsstring>(char bits[257]) const</argsstring>
        <name>bin</name>
        <qualifiedname>faiss::simd8uint32::bin</qualifiedname>
        <param>
          <type>char</type>
          <declname>bits</declname>
          <array>[257]</array>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1004" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1004" bodyend="1006"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1aec657e75ce56fa6427d9b3971758e9d8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::bin</definition>
        <argsstring>() const</argsstring>
        <name>bin</name>
        <qualifiedname>faiss::simd8uint32::bin</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1008" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1008" bodyend="1010"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::elements_to_string</definition>
        <argsstring>(const char *fmt) const</argsstring>
        <name>elements_to_string</name>
        <qualifiedname>faiss::simd8uint32::elements_to_string</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1012" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1012" bodyend="1014"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <qualifiedname>faiss::simd8uint32::hex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1016" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1016" bodyend="1018"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::dec</definition>
        <argsstring>() const</argsstring>
        <name>dec</name>
        <qualifiedname>faiss::simd8uint32::dec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1020" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1020" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::set1</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>set1</name>
        <qualifiedname>faiss::simd8uint32::set1</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1024" column="10" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1024" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::unzip</definition>
        <argsstring>() const</argsstring>
        <name>unzip</name>
        <qualifiedname>faiss::simd8uint32::unzip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_neon.h" line="1028" column="17" bodyfile="faiss/utils/simdlib_neon.h" bodystart="1028" bodyend="1032"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a89da3bccd3b703777fe4127f5fc764a7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>()</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="650" column="5" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="650" bodyend="650"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="652" column="14" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="652" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9583099d313bf8ecdbfcc7c6486cc002" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const simd256bit &amp;x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref> &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="656" column="14" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="656" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1aad9c42ae0f659b87d99ec395e925bf23" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(const uint32_t *x)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>const uint32_t *</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="658" column="14" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="658" bodyend="658"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>faiss::simd8uint32::simd8uint32</definition>
        <argsstring>(uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3, uint32_t u4, uint32_t u5, uint32_t u6, uint32_t u7)</argsstring>
        <name>simd8uint32</name>
        <qualifiedname>faiss::simd8uint32::simd8uint32</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>u0</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u1</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u2</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u3</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u4</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u5</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u6</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>u7</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="660" column="14" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="660" bodyend="677"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator+</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator+</name>
        <qualifiedname>faiss::simd8uint32::operator+</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="679" column="17" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="679" bodyend="685"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::operator-</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator-</name>
        <qualifiedname>faiss::simd8uint32::operator-</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="687" column="17" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="687" bodyend="693"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
        <definition>simd8uint32 &amp; faiss::simd8uint32::operator+=</definition>
        <argsstring>(const simd8uint32 &amp;other)</argsstring>
        <name>operator+=</name>
        <qualifiedname>faiss::simd8uint32::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="695" column="17" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="695" bodyend="700"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1af2e3b1671b5bccbe8a97f6b93b939166" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8uint32::operator==</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator==</name>
        <qualifiedname>faiss::simd8uint32::operator==</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="702" column="10" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="702" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9c44b96149faa651a584c643ebb68c38" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd8uint32::operator!=</definition>
        <argsstring>(simd8uint32 other) const</argsstring>
        <name>operator!=</name>
        <qualifiedname>faiss::simd8uint32::operator!=</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="712" column="10" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="712" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::elements_to_string</definition>
        <argsstring>(const char *fmt) const</argsstring>
        <name>elements_to_string</name>
        <qualifiedname>faiss::simd8uint32::elements_to_string</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>fmt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="716" column="17" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="716" bodyend="724"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::hex</definition>
        <argsstring>() const</argsstring>
        <name>hex</name>
        <qualifiedname>faiss::simd8uint32::hex</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="726" column="17" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="726" bodyend="728"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string faiss::simd8uint32::dec</definition>
        <argsstring>() const</argsstring>
        <name>dec</name>
        <qualifiedname>faiss::simd8uint32::dec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="730" column="17" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="730" bodyend="732"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd8uint32::set1</definition>
        <argsstring>(uint32_t x)</argsstring>
        <name>set1</name>
        <qualifiedname>faiss::simd8uint32::set1</qualifiedname>
        <param>
          <type>uint32_t</type>
          <declname>x</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="734" column="10" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="734" bodyend="738"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structfaiss_1_1simd8uint32" kindref="compound">simd8uint32</ref></type>
        <definition>simd8uint32 faiss::simd8uint32::unzip</definition>
        <argsstring>() const</argsstring>
        <name>unzip</name>
        <qualifiedname>faiss::simd8uint32::unzip</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_ppc64.h" line="740" column="17" bodyfile="faiss/utils/simdlib_ppc64.h" bodystart="740" bodyend="744"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a46f3f3e576ad528e64505c73980c903f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::storeu</definition>
        <argsstring>(void *ptr) const</argsstring>
        <name>storeu</name>
        <qualifiedname>faiss::simd256bit::storeu</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="47" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="47" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a44b57fcfb969954b9fc42f7dfee6bdf2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::loadu</definition>
        <argsstring>(const void *ptr)</argsstring>
        <name>loadu</name>
        <qualifiedname>faiss::simd256bit::loadu</qualifiedname>
        <param>
          <type>const void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="51" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="51" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a9cd7429e3408e78181b1810221664c0f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void faiss::simd256bit::store</definition>
        <argsstring>(void *ptr) const</argsstring>
        <name>store</name>
        <qualifiedname>faiss::simd256bit::store</qualifiedname>
        <param>
          <type>void *</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="55" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="55" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structfaiss_1_1simd256bit_1a69f933068df260aa8c0f3ac7686e1417" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool faiss::simd256bit::is_same_as</definition>
        <argsstring>(simd256bit other) const</argsstring>
        <name>is_same_as</name>
        <qualifiedname>faiss::simd256bit::is_same_as</qualifiedname>
        <param>
          <type><ref refid="structfaiss_1_1simd256bit" kindref="compound">simd256bit</ref></type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/utils/simdlib_avx2.h" line="75" column="10" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="75" bodyend="79"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>vector of 8 unsigned 32-bit integers </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>faiss::simd256bit</label>
        <link refid="structfaiss_1_1simd256bit"/>
      </node>
      <node id="1">
        <label>faiss::simd8uint32</label>
        <link refid="structfaiss_1_1simd8uint32"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>faiss::simd256bit</label>
        <link refid="structfaiss_1_1simd256bit"/>
      </node>
      <node id="1">
        <label>faiss::simd8uint32</label>
        <link refid="structfaiss_1_1simd8uint32"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/utils/simdlib_avx2.h" line="505" column="1" bodyfile="faiss/utils/simdlib_avx2.h" bodystart="505" bodyend="579"/>
    <listofallmembers>
      <member refid="structfaiss_1_1simd8uint32_1a106f0835ce8804af4e71eb8f65b3860c" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>bin</name></member>
      <member refid="structfaiss_1_1simd8uint32_1aec657e75ce56fa6427d9b3971758e9d8" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>bin</name></member>
      <member refid="structfaiss_1_1simd8uint32_1ac7c7f6d24de40a0775ec4eabf105a87f" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>clear</name></member>
      <member refid="structfaiss_1_1simd8uint32_1ac48e258881fce8283f47a1f112d123ff" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>data</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>dec</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>dec</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>dec</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a916170f79c2616d3f22f557b2a17a4df" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>dec</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>elements_to_string</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>elements_to_string</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>elements_to_string</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a6bd39771259f83652ead2bd46591d20c" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>elements_to_string</name></member>
      <member refid="structfaiss_1_1simd256bit_1a745d258c489056abcb18de77d04dc7da" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>f</name></member>
      <member refid="structfaiss_1_1simd256bit_1a73b7c0cc868d44cc02c58688977ba4a7" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>f32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>hex</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>hex</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>hex</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9129b145e1f1fbf18b0d7612a54c5bbb" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>hex</name></member>
      <member refid="structfaiss_1_1simd256bit_1a0061ab97fb706619dbb1db084d89c57e" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>i</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a3786186a2d9ab71fc35c62c3ab0dbb93" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>is_same_as</name></member>
      <member refid="structfaiss_1_1simd256bit_1a69f933068df260aa8c0f3ac7686e1417" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8uint32</scope><name>is_same_as</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a522eb3e5f8f2b08a4fa60d0a166a7b66" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>loadu</name></member>
      <member refid="structfaiss_1_1simd256bit_1a44b57fcfb969954b9fc42f7dfee6bdf2" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8uint32</scope><name>loadu</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9c44b96149faa651a584c643ebb68c38" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator!=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9c44b96149faa651a584c643ebb68c38" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator!=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a8fc08be86df0d86f5f533135e932040e" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator!=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9c44b96149faa651a584c643ebb68c38" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator!=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a4756233503cf4b2836ae01b6660fb791" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a2cccab76fb579543b867dc020931e2ab" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator+=</name></member>
      <member refid="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator-</name></member>
      <member refid="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator-</name></member>
      <member refid="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator-</name></member>
      <member refid="structfaiss_1_1simd8uint32_1afb84e4e97f2a310e2d3da4aa95a8afa9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator-</name></member>
      <member refid="structfaiss_1_1simd8uint32_1af2e3b1671b5bccbe8a97f6b93b939166" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator==</name></member>
      <member refid="structfaiss_1_1simd8uint32_1af2e3b1671b5bccbe8a97f6b93b939166" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator==</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a8a285fa0c882d4ae0c0a9924aeab8da3" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator==</name></member>
      <member refid="structfaiss_1_1simd8uint32_1af2e3b1671b5bccbe8a97f6b93b939166" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator==</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a5b27538f9fba7013969b566148164319" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>operator~</name></member>
      <member refid="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd8uint32_1af9641584823aaa3118998b3a63bbd97b" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>set1</name></member>
      <member refid="structfaiss_1_1simd256bit_1a7c98ba53fe0ec7eca4deb7ce4e47f20a" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a26e2b4465abb0656c42798b34d099ff9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1addeecdb12ca2085ffc347894adfa1eff" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a68ba432289b25674f585043831580fb9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a7c98ba53fe0ec7eca4deb7ce4e47f20a" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a68ba432289b25674f585043831580fb9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a7c98ba53fe0ec7eca4deb7ce4e47f20a" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd256bit_1a68ba432289b25674f585043831580fb9" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd256bit</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a89da3bccd3b703777fe4127f5fc764a7" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1aa5492eb7ac37ae575678d0ef892d22b7" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a869e7afbc9c6551de07262f06a3a4d6c" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a0086499229d095b39be4c682881a1835" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a89da3bccd3b703777fe4127f5fc764a7" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9583099d313bf8ecdbfcc7c6486cc002" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1aad9c42ae0f659b87d99ec395e925bf23" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a91007d2e6b4014a04af520fb2613563b" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a4afdab340dd761c338ae8ba062eea447" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1ad3a20f7237b6cbd6539335f864ff604b" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a0086499229d095b39be4c682881a1835" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a89da3bccd3b703777fe4127f5fc764a7" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abe0ad93df6ae31c49b471a2390148861" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a9583099d313bf8ecdbfcc7c6486cc002" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1aad9c42ae0f659b87d99ec395e925bf23" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1abad7a46ee1136b0a655dbb3b6bd6d9b6" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>simd8uint32</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a2a0698c637a32a56f2bf61922a522fa3" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>store</name></member>
      <member refid="structfaiss_1_1simd256bit_1a9cd7429e3408e78181b1810221664c0f" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8uint32</scope><name>store</name></member>
      <member refid="structfaiss_1_1simd8uint32_1ad9640b0b2bf719d75099690cac845f39" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>storeu</name></member>
      <member refid="structfaiss_1_1simd256bit_1a46f3f3e576ad528e64505c73980c903f" prot="public" virt="non-virtual" ambiguityscope="faiss::simd256bit::"><scope>faiss::simd8uint32</scope><name>storeu</name></member>
      <member refid="structfaiss_1_1simd256bit_1ae1a0c5c5a086370f21a346bd20e2b378" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>u16</name></member>
      <member refid="structfaiss_1_1simd256bit_1aa68a3cf73ecbc73107a720e8c3f1d25c" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>u32</name></member>
      <member refid="structfaiss_1_1simd256bit_1acb1ccdc5222ee156bacdc10a5f94d736" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>u8</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>unzip</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>unzip</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>unzip</name></member>
      <member refid="structfaiss_1_1simd8uint32_1a03cf5716cd47da6c12f62ac8003c6636" prot="public" virt="non-virtual"><scope>faiss::simd8uint32</scope><name>unzip</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
