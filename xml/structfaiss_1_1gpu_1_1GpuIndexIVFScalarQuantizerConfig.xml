<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="structfaiss_1_1gpu_1_1GpuIndexIVFScalarQuantizerConfig" kind="struct" language="C++" prot="public">
    <compoundname>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</compoundname>
    <basecompoundref refid="structfaiss_1_1gpu_1_1GpuIndexIVFConfig" prot="public" virt="non-virtual">faiss::gpu::GpuIndexIVFConfig</basecompoundref>
    <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexIVFScalarQuantizerConfig_1a37a76f2a5f746906d167fbe915e87da1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::gpu::GpuIndexIVFScalarQuantizerConfig::interleavedLayout</definition>
        <argsstring></argsstring>
        <name>interleavedLayout</name>
        <qualifiedname>faiss::gpu::GpuIndexIVFScalarQuantizerConfig::interleavedLayout</qualifiedname>
        <initializer>= true</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Use the alternative memory layout for the IVF lists (currently the default) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndexIVFScalarQuantizer.h" line="23" column="10" bodyfile="faiss/gpu/GpuIndexIVFScalarQuantizer.h" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexIVFConfig_1af432221761d48e4753f501208a60264d" prot="public" static="no" mutable="no">
        <type>IndicesOptions</type>
        <definition>IndicesOptions faiss::gpu::GpuIndexIVFConfig::indicesOptions</definition>
        <argsstring></argsstring>
        <name>indicesOptions</name>
        <qualifiedname>faiss::gpu::GpuIndexIVFConfig::indicesOptions</qualifiedname>
        <initializer>= INDICES_64_BIT</initializer>
        <briefdescription>
<para><ref refid="structfaiss_1_1Index" kindref="compound">Index</ref> storage options for the GPU. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndexIVF.h" line="25" column="20" bodyfile="faiss/gpu/GpuIndexIVF.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexIVFConfig_1a6d357a9a67a2fed9c8e7b139712d30f6" prot="public" static="no" mutable="no">
        <type><ref refid="structfaiss_1_1gpu_1_1GpuIndexFlatConfig" kindref="compound">GpuIndexFlatConfig</ref></type>
        <definition>GpuIndexFlatConfig faiss::gpu::GpuIndexIVFConfig::flatConfig</definition>
        <argsstring></argsstring>
        <name>flatConfig</name>
        <qualifiedname>faiss::gpu::GpuIndexIVFConfig::flatConfig</qualifiedname>
        <briefdescription>
<para>Configuration for the coarse quantizer object. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndexIVF.h" line="28" column="24" bodyfile="faiss/gpu/GpuIndexIVF.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexIVFConfig_1a9ad7e2e02e0577e31968c539e499fe00" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::gpu::GpuIndexIVFConfig::allowCpuCoarseQuantizer</definition>
        <argsstring></argsstring>
        <name>allowCpuCoarseQuantizer</name>
        <qualifiedname>faiss::gpu::GpuIndexIVFConfig::allowCpuCoarseQuantizer</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This flag controls the CPU fallback logic for coarse quantizer component of the index. When set to false (default), the cloner will throw an exception for indices not implemented on GPU. When set to true, it will fallback to a CPU implementation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndexIVF.h" line="34" column="10" bodyfile="faiss/gpu/GpuIndexIVF.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexConfig_1aab05a0aa7b42feae7df4e556a52ead57" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int faiss::gpu::GpuIndexConfig::device</definition>
        <argsstring></argsstring>
        <name>device</name>
        <qualifiedname>faiss::gpu::GpuIndexConfig::device</qualifiedname>
        <initializer>= 0</initializer>
        <briefdescription>
<para>GPU device on which the index is resident. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndex.h" line="34" column="9" bodyfile="faiss/gpu/GpuIndex.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexConfig_1adf7c9461009108a9a433a077ab322d2e" prot="public" static="no" mutable="no">
        <type>MemorySpace</type>
        <definition>MemorySpace faiss::gpu::GpuIndexConfig::memorySpace</definition>
        <argsstring></argsstring>
        <name>memorySpace</name>
        <qualifiedname>faiss::gpu::GpuIndexConfig::memorySpace</qualifiedname>
        <initializer>= MemorySpace::Device</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>What memory space to use for primary storage. On Pascal and above (CC 6+) architectures, allows GPUs to use more memory than is available on the GPU. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndex.h" line="39" column="17" bodyfile="faiss/gpu/GpuIndex.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structfaiss_1_1gpu_1_1GpuIndexConfig_1ad0c59b7ef7ac3c1055da1addffb9dbb1" prot="public" static="no" mutable="no">
        <type>bool</type>
        <definition>bool faiss::gpu::GpuIndexConfig::use_cuvs</definition>
        <argsstring></argsstring>
        <name>use_cuvs</name>
        <qualifiedname>faiss::gpu::GpuIndexConfig::use_cuvs</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>Should the index dispatch down to cuVS? </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="faiss/gpu/GpuIndex.h" line="45" column="10" bodyfile="faiss/gpu/GpuIndex.h" bodystart="45" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>faiss::gpu::GpuIndexConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexConfig"/>
      </node>
      <node id="2">
        <label>faiss::gpu::GpuIndexIVFConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexIVFConfig"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexIVFScalarQuantizerConfig"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="3">
        <label>faiss::gpu::GpuIndexConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexConfig"/>
      </node>
      <node id="4">
        <label>faiss::gpu::GpuIndexFlatConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexFlatConfig"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>faiss::gpu::GpuIndexIVFConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexIVFConfig"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>flatConfig</edgelabel>
        </childnode>
      </node>
      <node id="1">
        <label>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</label>
        <link refid="structfaiss_1_1gpu_1_1GpuIndexIVFScalarQuantizerConfig"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="faiss/gpu/GpuIndexIVFScalarQuantizer.h" line="20" column="1" bodyfile="faiss/gpu/GpuIndexIVFScalarQuantizer.h" bodystart="20" bodyend="24"/>
    <listofallmembers>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexIVFConfig_1a9ad7e2e02e0577e31968c539e499fe00" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</scope><name>allowCpuCoarseQuantizer</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexConfig_1aab05a0aa7b42feae7df4e556a52ead57" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</scope><name>device</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexIVFConfig_1a6d357a9a67a2fed9c8e7b139712d30f6" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</scope><name>flatConfig</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexIVFConfig_1af432221761d48e4753f501208a60264d" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</scope><name>indicesOptions</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexIVFScalarQuantizerConfig_1a37a76f2a5f746906d167fbe915e87da1" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</scope><name>interleavedLayout</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexConfig_1adf7c9461009108a9a433a077ab322d2e" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</scope><name>memorySpace</name></member>
      <member refid="structfaiss_1_1gpu_1_1GpuIndexConfig_1ad0c59b7ef7ac3c1055da1addffb9dbb1" prot="public" virt="non-virtual"><scope>faiss::gpu::GpuIndexIVFScalarQuantizerConfig</scope><name>use_cuvs</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
